{
    "sourceFile": "transliterate.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1758296088253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758298311218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,910 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Transliteration Tool | Bharat Script</title>\r\n+    <link rel=\"icon\" type=\"image/x-icon\" href=\"/static/favicon.ico\">\r\n+    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n+    <link href=\"https://unpkg.com/aos@2.3.1/dist/aos.css\" rel=\"stylesheet\">\r\n+    <script src=\"https://unpkg.com/aos@2.3.1/dist/aos.js\"></script>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js\"></script>\r\n+    <script src=\"https://unpkg.com/feather-icons\"></script>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/@indic-transliteration/sanscript\"></script>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/tesseract.js@4/dist/tesseract.min.js\"></script>\r\n+    <style>\r\n+        .gradient-text {\r\n+            background: linear-gradient(90deg, #F97316, #10B981);\r\n+            -webkit-background-clip: text;\r\n+            background-clip: text;\r\n+            color: transparent;\r\n+        }\r\n+\r\n+        .gradient-bg {\r\n+            background: linear-gradient(135deg, #F9FAFB, #E5E7EB);\r\n+        }\r\n+\r\n+        .btn-gradient {\r\n+            background: linear-gradient(90deg, #F97316, #10B981);\r\n+            transition: all 0.3s ease;\r\n+        }\r\n+\r\n+        .btn-gradient:hover {\r\n+            transform: translateY(-2px);\r\n+            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\r\n+        }\r\n+\r\n+        .file-upload {\r\n+            position: relative;\r\n+            overflow: hidden;\r\n+            display: inline-block;\r\n+        }\r\n+\r\n+        .file-upload-input {\r\n+            position: absolute;\r\n+            left: 0;\r\n+            top: 0;\r\n+            opacity: 0;\r\n+            width: 100%;\r\n+            height: 100%;\r\n+            cursor: pointer;\r\n+        }\r\n+\r\n+        .loader {\r\n+            border: 4px solid #f3f3f3;\r\n+            border-top: 4px solid #F97316;\r\n+            border-radius: 50%;\r\n+            width: 30px;\r\n+            height: 30px;\r\n+            animation: spin 1s linear infinite;\r\n+            margin: 0 auto;\r\n+        }\r\n+\r\n+        @keyframes spin {\r\n+            0% {\r\n+                transform: rotate(0deg);\r\n+            }\r\n+\r\n+            100% {\r\n+                transform: rotate(360deg);\r\n+            }\r\n+        }\r\n+\r\n+        .tab-active {\r\n+            border-bottom: 3px solid #F97316;\r\n+            color: #F97316;\r\n+            font-weight: 600;\r\n+        }\r\n+\r\n+        .language-option {\r\n+            display: flex;\r\n+            align-items: center;\r\n+        }\r\n+\r\n+        .language-option span {\r\n+            margin-left: 8px;\r\n+        }\r\n+    </style>\r\n+</head>\r\n+\r\n+<body class=\"gradient-bg min-h-screen\">\r\n+    <!-- Navigation -->\r\n+    <nav class=\"bg-white bg-opacity-90 shadow-sm\">\r\n+        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n+            <div class=\"flex justify-between h-16 items-center\">\r\n+                <div class=\"flex items-center\">\r\n+                    <div class=\"flex-shrink-0 flex items-center\">\r\n+                        <i data-feather=\"globe\" class=\"h-8 w-8 text-orange-500\"></i>\r\n+                        <span class=\"ml-2 text-xl font-bold text-gray-800\">BharatScript</span>\r\n+                    </div>\r\n+                </div>\r\n+                <div class=\"hidden md:block\">\r\n+                    <div class=\"ml-10 flex items-center space-x-4\">\r\n+                        <a href=\"index.html\"\r\n+                            class=\"px-3 py-2 rounded-md text-sm font-medium text-gray-500 hover:text-gray-900 hover:bg-gray-50\">Home</a>\r\n+                        <a href=\"#\"\r\n+                            class=\"px-3 py-2 rounded-md text-sm font-medium text-gray-900 bg-gray-100\">Transliterate</a>\r\n+                        <a href=\"#\"\r\n+                            class=\"px-3 py-2 rounded-md text-sm font-medium text-gray-500 hover:text-gray-900 hover:bg-gray-50\">About</a>\r\n+                    </div>\r\n+                </div>\r\n+                <div class=\"-mr-2 flex md:hidden\">\r\n+                    <button type=\"button\"\r\n+                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none\">\r\n+                        <i data-feather=\"menu\"></i>\r\n+                    </button>\r\n+                </div>\r\n+            </div>\r\n+        </div>\r\n+    </nav>\r\n+\r\n+    <!-- Main Content -->\r\n+    <main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n+        <div class=\"text-center mb-8\" data-aos=\"fade-up\">\r\n+            <h1 class=\"text-3xl font-extrabold text-gray-900 sm:text-4xl\">\r\n+                <span class=\"gradient-text\">Script Transliterator</span>\r\n+            </h1>\r\n+            <p class=\"mt-3 max-w-2xl mx-auto text-xl text-gray-500 sm:mt-4\">\r\n+                Convert text between different Indian scripts instantly\r\n+            </p>\r\n+        </div>\r\n+\r\n+        <!-- Tabs -->\r\n+        <div class=\"border-b border-gray-200 mb-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n+            <nav class=\"-mb-px flex space-x-8\">\r\n+                <a href=\"#\" id=\"text-tab\" class=\"tab-active whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\">\r\n+                    Text Input\r\n+                </a>\r\n+                <a href=\"#\" id=\"image-tab\"\r\n+                    class=\"text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\">\r\n+                    Image OCR\r\n+                </a>\r\n+            </nav>\r\n+        </div>\r\n+\r\n+        <!-- Transliteration Tool -->\r\n+        <div id=\"text-input-section\" class=\"bg-white shadow rounded-lg overflow-hidden\" data-aos=\"fade-up\"\r\n+            data-aos-delay=\"200\">\r\n+            <div class=\"p-6\">\r\n+                <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n+                    <!-- Input Section -->\r\n+                    <div>\r\n+                        <div class=\"flex justify-between items-center mb-4\">\r\n+                            <h3 class=\"text-lg font-medium text-gray-900\">Input</h3>\r\n+                            <div class=\"flex items-center\">\r\n+                                <label class=\"mr-2 text-sm font-medium text-gray-700\">Source:</label>\r\n+                                <select id=\"source-script\"\r\n+                                    class=\"border-gray-300 focus:border-orange-500 focus:ring-orange-500 rounded-md shadow-sm text-sm\">\r\n+                                    <option value=\"devanagari\">Hindi (Devanagari)</option>\r\n+                                    <option value=\"bengali\">Bengali</option>\r\n+                                    <option value=\"tamil\">Tamil</option>\r\n+                                    <option value=\"telugu\">Telugu</option>\r\n+                                    <option value=\"kannada\">Kannada</option>\r\n+                                    <option value=\"malayalam\">Malayalam</option>\r\n+                                    <option value=\"gujarati\">Gujarati</option>\r\n+                                    <option value=\"gurmukhi\">Punjabi (Gurmukhi)</option>\r\n+                                    <option value=\"oriya\">Odia</option>\r\n+                                </select>\r\n+                            </div>\r\n+                        </div>\r\n+                        <textarea id=\"input-text\" rows=\"12\"\r\n+                            class=\"shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border border-gray-300 rounded-md p-3\"\r\n+                            placeholder=\"Type or paste your text here...\"></textarea>\r\n+                        <div class=\"mt-2 flex justify-between\">\r\n+                            <div class=\"flex items-center\">\r\n+                                <span class=\"text-xs text-gray-500\">Characters: <span id=\"char-count\">0</span></span>\r\n+                            </div>\r\n+                            <button id=\"speech-input-btn\" class=\"text-sm text-orange-600 hover:text-orange-800\">\r\n+                                <i data-feather=\"mic\" class=\"w-4 h-4 inline mr-1\"></i> Speech Input\r\n+                            </button>\r\n+                        </div>\r\n+                    </div>\r\n+\r\n+                    <!-- Output Section -->\r\n+                    <div>\r\n+                        <div class=\"flex justify-between items-center mb-4\">\r\n+                            <h3 class=\"text-lg font-medium text-gray-900\">Output</h3>\r\n+                            <div class=\"flex items-center\">\r\n+                                <label class=\"mr-2 text-sm font-medium text-gray-700\">Target:</label>\r\n+                                <select id=\"target-script\"\r\n+                                    class=\"border-gray-300 focus:border-orange-500 focus:ring-orange-500 rounded-md shadow-sm text-sm\">\r\n+                                    <option value=\"itrans\">English (Latin)</option>\r\n+                                    <option value=\"devanagari\">Hindi (Devanagari)</option>\r\n+                                    <option value=\"bengali\">Bengali</option>\r\n+                                    <option value=\"tamil\">Tamil</option>\r\n+                                    <option value=\"telugu\">Telugu</option>\r\n+                                    <option value=\"kannada\">Kannada</option>\r\n+                                    <option value=\"malayalam\">Malayalam</option>\r\n+                                </select>\r\n+                            </div>\r\n+                        </div>\r\n+                        <div id=\"output-text\"\r\n+                            class=\"shadow-sm block w-full sm:text-sm border border-gray-300 rounded-md p-3 bg-gray-50 min-h-[200px]\">\r\n+                            <p class=\"text-gray-400 italic\">Transliterated text will appear here...</p>\r\n+                        </div>\r\n+                        <div class=\"mt-2 flex justify-end space-x-3\">\r\n+                            <button id=\"copy-btn\"\r\n+                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n+                                <i data-feather=\"copy\" class=\"w-4 h-4 mr-1\"></i> Copy\r\n+                            </button>\r\n+                            <button id=\"speak-btn\"\r\n+                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n+                                <i data-feather=\"volume-2\" class=\"w-4 h-4 mr-1\"></i> Speak\r\n+                            </button>\r\n+                            <button id=\"download-btn\"\r\n+                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n+                                <i data-feather=\"download\" class=\"w-4 h-4 mr-1\"></i> Download\r\n+                            </button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+\r\n+                <!-- Action Buttons -->\r\n+                <div class=\"mt-6 flex justify-center\">\r\n+                    <button id=\"transliterate-btn\"\r\n+                        class=\"btn-gradient text-white px-8 py-3 rounded-md text-lg font-medium inline-flex items-center\">\r\n+                        <i data-feather=\"repeat\" class=\"w-5 h-5 mr-2\"></i> Transliterate\r\n+                    </button>\r\n+                </div>\r\n+            </div>\r\n+        </div>\r\n+\r\n+        <!-- Image OCR Section (Hidden by default) -->\r\n+        <div id=\"image-ocr-section\" class=\"bg-white shadow rounded-lg overflow-hidden mt-8 hidden\" data-aos=\"fade-up\">\r\n+            <div class=\"p-6\">\r\n+                <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Upload Image with Text</h3>\r\n+                <div class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\r\n+                    <div class=\"flex justify-center\">\r\n+                        <i data-feather=\"image\" class=\"w-12 w-12 text-gray-400\"></i>\r\n+                    </div>\r\n+                    <div class=\"mt-4 flex text-sm text-gray-600\">\r\n+                        <label\r\n+                            class=\"file-upload relative cursor-pointer bg-white rounded-md font-medium text-orange-600 hover:text-orange-500 focus-within:outline-none\">\r\n+                            <span>Upload an image file</span>\r\n+                            <input type=\"file\" id=\"ocr-image-upload\" class=\"file-upload-input\" accept=\"image/*\">\r\n+                        </label>\r\n+                        <p class=\"pl-1\">or drag and drop</p>\r\n+                    </div>\r\n+                    <p class=\"text-xs text-gray-500 mt-2\">\r\n+                        PNG, JPG, GIF up to 10MB\r\n+                    </p>\r\n+                </div>\r\n+\r\n+                <div class=\"mt-6 grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n+                    <!-- Original Image Preview -->\r\n+                    <div>\r\n+                        <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Original Image</h4>\r\n+                        <div id=\"image-preview\"\r\n+                            class=\"border border-gray-200 rounded-md p-4 flex items-center justify-center bg-gray-50 min-h-[200px]\">\r\n+                            <p class=\"text-gray-400 italic\">Image preview will appear here...</p>\r\n+                        </div>\r\n+                    </div>\r\n+\r\n+                    <!-- Extracted Text -->\r\n+                    <div>\r\n+                        <div class=\"flex justify-between items-center mb-2\">\r\n+                            <h4 class=\"text-sm font-medium text-gray-700\">Extracted Text</h4>\r\n+                            <div class=\"flex items-center\">\r\n+                                <label class=\"mr-2 text-xs font-medium text-gray-700\">Language:</label>\r\n+                                <select id=\"ocr-language\"\r\n+                                    class=\"border-gray-300 focus:border-orange-500 focus:ring-orange-500 rounded-md shadow-sm text-xs\">\r\n+                                    <option value=\"eng\">English</option>\r\n+                                    <option value=\"hin\">Hindi</option>\r\n+                                    <option value=\"ben\">Bengali</option>\r\n+                                    <option value=\"tam\">Tamil</option>\r\n+                                    <option value=\"tel\">Telugu</option>\r\n+                                    <option value=\"kan\">Kannada</option>\r\n+                                    <option value=\"mal\">Malayalam</option>\r\n+                                    <option value=\"guj\">Gujarati</option>\r\n+                                    <option value=\"pan\">Punjabi</option>\r\n+                                    <option value=\"ori\">Odia</option>\r\n+                                </select>\r\n+                            </div>\r\n+                        </div>\r\n+                        <div id=\"ocr-extracted-text\"\r\n+                            class=\"border border-gray-200 rounded-md p-3 bg-gray-50 min-h-[200px]\">\r\n+                            <p class=\"text-gray-400 italic\">Extracted text will appear here...</p>\r\n+                        </div>\r\n+                        <div class=\"mt-2 flex justify-end\">\r\n+                            <button id=\"ocr-copy-btn\" class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n+                                <i data-feather=\"copy\" class=\"w-3 h-3 inline mr-1\"></i> Copy Text\r\n+                            </button>\r\n+                            <button id=\"ocr-use-btn\" class=\"text-xs text-orange-600 hover:text-orange-800\">\r\n+                                <i data-feather=\"arrow-right\" class=\"w-3 h-3 inline mr-1\"></i> Use for Transliteration\r\n+                            </button>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+\r\n+                <!-- OCR Processing Controls -->\r\n+                <div class=\"mt-6 flex justify-center space-x-4\">\r\n+                    <button id=\"ocr-cancel-btn\"\r\n+                        class=\"px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n+                        Clear\r\n+                    </button>\r\n+                    <button id=\"ocr-process-btn\"\r\n+                        class=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-orange-600 hover:bg-orange-700 focus:outline-none\">\r\n+                        <div class=\"flex items-center\">\r\n+                            <span id=\"ocr-btn-text\">Extract Text</span>\r\n+                            <div id=\"ocr-loader\" class=\"loader hidden ml-2\"></div>\r\n+                        </div>\r\n+                    </button>\r\n+                </div>\r\n+\r\n+                <!-- OCR Progress -->\r\n+                <div id=\"ocr-progress\" class=\"mt-4 hidden\">\r\n+                    <div class=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n+                        <div id=\"ocr-progress-bar\" class=\"bg-orange-600 h-2.5 rounded-full\" style=\"width: 0%\"></div>\r\n+                    </div>\r\n+                    <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n+                        <span id=\"ocr-progress-status\">Initializing...</span>\r\n+                        <span id=\"ocr-progress-percentage\">0%</span>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        </div>\r\n+\r\n+        <!-- Script Information -->\r\n+        <div class=\"mt-8 bg-white shadow rounded-lg overflow-hidden\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n+            <div class=\"p-6\">\r\n+                <h3 class=\"text-lg font-medium text-gray-900 mb-4\">About Indian Scripts</h3>\r\n+                <div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\r\n+                    <div>\r\n+                        <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Source Script: <span\r\n+                                id=\"source-script-name\">Devanagari</span></h4>\r\n+                        <p class=\"text-sm text-gray-500\">\r\n+                            Devanagari is an abugida alphabet of India and Nepal. It is written from left to right, has\r\n+                            a strong preference for symmetrical rounded shapes within squared outlines, and is\r\n+                            recognizable by a horizontal line that runs along the top of full letters.\r\n+                        </p>\r\n+                    </div>\r\n+                    <div>\r\n+                        <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Target Script: <span\r\n+                                id=\"target-script-name\">Latin (English)</span></h4>\r\n+                        <p class=\"text-sm text-gray-500\">\r\n+                            The Latin script is the basis of the international phonetic alphabet. Our transliteration\r\n+                            follows standard academic conventions for representing Indian scripts in Latin characters,\r\n+                            preserving pronunciation as closely as possible.\r\n+                        </p>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        </div>\r\n+    </main>\r\n+\r\n+    <!-- Footer -->\r\n+    <footer class=\"bg-gray-800 mt-12\">\r\n+        <div class=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\r\n+            <div class=\"xl:grid xl:grid-cols-3 xl:gap-8\">\r\n+                <div class=\"space-y-8 xl:col-span-1\">\r\n+                    <div class=\"flex items-center\">\r\n+                        <i data-feather=\"globe\" class=\"h-8 w-8 text-orange-500\"></i>\r\n+                        <span class=\"ml-2 text-xl font-bold text-white\">BharatScript</span>\r\n+                    </div>\r\n+                    <p class=\"text-gray-300 text-base\">\r\n+                        Making Indian scripts accessible to everyone through technology.\r\n+                    </p>\r\n+                </div>\r\n+                <div class=\"mt-12 grid grid-cols-2 gap-8 xl:mt-0 xl:col-span-2\">\r\n+                    <div class=\"md:grid md:grid-cols-2 md:gap-8\">\r\n+                        <div>\r\n+                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n+                                Navigation\r\n+                            </h3>\r\n+                            <ul class=\"mt-4 space-y-4\">\r\n+                                <li>\r\n+                                    <a href=\"index.html\" class=\"text-base text-gray-400 hover:text-white\">\r\n+                                        Home\r\n+                                    </a>\r\n+                                </li>\r\n+                                <li>\r\n+                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n+                                        Transliteration Tool\r\n+                                    </a>\r\n+                                </li>\r\n+                                <li>\r\n+                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n+                                        About\r\n+                                    </a>\r\n+                                </li>\r\n+                            </ul>\r\n+                        </div>\r\n+                        <div class=\"mt-12 md:mt-0\">\r\n+                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n+                                Support\r\n+                            </h3>\r\n+                            <ul class=\"mt-4 space-y-4\">\r\n+                                <li>\r\n+                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n+                                        Documentation\r\n+                                    </a>\r\n+                                </li>\r\n+                                <li>\r\n+                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n+                                        Contact\r\n+                                    </a>\r\n+                                </li>\r\n+                            </ul>\r\n+                        </div>\r\n+                    </div>\r\n+                    <div class=\"md:grid md:grid-cols-2 md:gap-8\">\r\n+                        <div>\r\n+                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n+                                Acknowledgments\r\n+                            </h3>\r\n+                            <ul class=\"mt-4 space-y-4\">\r\n+                                <li>\r\n+                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n+                                        AICTE\r\n+                                    </a>\r\n+                                </li>\r\n+                                <li>\r\n+                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n+                                        IKS\r\n+                                    </a>\r\n+                                </li>\r\n+                            </ul>\r\n+                        </div>\r\n+                    </div>\r\n+                    <div class=\"md:grid md:grid-cols-2 md:gap-8\">\r\n+                        <div>\r\n+                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n+                                Technology\r\n+                            </h3>\r\n+                            <ul class=\"mt-4 space-y-4\">\r\n+                                <li>\r\n+                                    <span class=\"text-base text-gray-400\">Sanscript.js</span>\r\n+                                </li>\r\n+                                <li>\r\n+                                    <span class=\"text-base text-gray-400\">Tesseract.js</span>\r\n+                                </li>\r\n+                            </ul>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+            <div class=\"mt-12 border-t border-gray-700 pt-8\">\r\n+                <p class=\"text-base text-gray-400 text-center\">\r\n+                    &copy; 2023 Bharat Script Transliterator. All rights reserved.\r\n+                </p>\r\n+            </div>\r\n+        </div>\r\n+    </footer>\r\n+\r\n+    <script>\r\n+        feather.replace();\r\n+        AOS.init({\r\n+            duration: 800,\r\n+            easing: 'ease-in-out',\r\n+            once: true\r\n+        });\r\n+\r\n+        // Character count for input text\r\n+        document.getElementById('input-text').addEventListener('input', function () {\r\n+            document.getElementById('char-count').textContent = this.value.length;\r\n+        });\r\n+\r\n+        // Copy button functionality\r\n+        document.getElementById('copy-btn').addEventListener('click', function () {\r\n+            const outputText = document.getElementById('output-text').textContent;\r\n+            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n+                alert('No text to copy. Please transliterate some text first.');\r\n+                return;\r\n+            }\r\n+\r\n+            navigator.clipboard.writeText(outputText).then(() => {\r\n+                const originalText = this.innerHTML;\r\n+                this.innerHTML = '<i data-feather=\"check\" class=\"w-4 h-4 mr-1\"></i> Copied!';\r\n+                feather.replace();\r\n+                setTimeout(() => {\r\n+                    this.innerHTML = originalText;\r\n+                    feather.replace();\r\n+                }, 2000);\r\n+            }).catch(err => {\r\n+                console.error('Failed to copy text: ', err);\r\n+                alert('Failed to copy text. Please try again.');\r\n+            });\r\n+        });\r\n+\r\n+        // Speak button functionality with language support\r\n+        document.getElementById('speak-btn').addEventListener('click', function () {\r\n+            const outputText = document.getElementById('output-text').textContent;\r\n+            const targetScript = document.getElementById('target-script').value;\r\n+\r\n+            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n+                alert('No text to speak. Please transliterate some text first.');\r\n+                return;\r\n+            }\r\n+\r\n+            if ('speechSynthesis' in window) {\r\n+                // Cancel any ongoing speech\r\n+                window.speechSynthesis.cancel();\r\n+\r\n+                const utterance = new SpeechSynthesisUtterance(outputText);\r\n+\r\n+                // Set language based on target script\r\n+                const langMap = {\r\n+                    'devanagari': 'hi-IN',\r\n+                    'bengali': 'bn-IN',\r\n+                    'tamil': 'ta-IN',\r\n+                    'telugu': 'te-IN',\r\n+                    'kannada': 'kn-IN',\r\n+                    'malayalam': 'ml-IN',\r\n+                    'gujarati': 'gu-IN',\r\n+                    'gurmukhi': 'pa-IN',\r\n+                    'itrans': 'en-US'\r\n+                };\r\n+\r\n+                utterance.lang = langMap[targetScript] || 'en-US';\r\n+                utterance.rate = 0.8;\r\n+\r\n+                // Try to set a voice that supports the language\r\n+                const voices = speechSynthesis.getVoices();\r\n+                const preferredVoice = voices.find(voice =>\r\n+                    voice.lang === utterance.lang\r\n+                );\r\n+\r\n+                if (preferredVoice) {\r\n+                    utterance.voice = preferredVoice;\r\n+                }\r\n+\r\n+                speechSynthesis.speak(utterance);\r\n+            } else {\r\n+                alert('Text-to-speech is not supported in your browser');\r\n+            }\r\n+        });\r\n+\r\n+        // Download button functionality\r\n+        document.getElementById('download-btn').addEventListener('click', function () {\r\n+            const outputText = document.getElementById('output-text').textContent;\r\n+\r\n+            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n+                alert('No text to download. Please transliterate some text first.');\r\n+                return;\r\n+            }\r\n+\r\n+            const blob = new Blob([outputText], { type: 'text/plain' });\r\n+            const url = URL.createObjectURL(blob);\r\n+            const a = document.createElement('a');\r\n+            a.href = url;\r\n+\r\n+            // Create filename based on scripts used\r\n+            const sourceScript = document.getElementById('source-script').value;\r\n+            const targetScript = document.getElementById('target-script').value;\r\n+            a.download = `transliteration-${sourceScript}-to-${targetScript}.txt`;\r\n+\r\n+            document.body.appendChild(a);\r\n+            a.click();\r\n+            document.body.removeChild(a);\r\n+            URL.revokeObjectURL(url);\r\n+        });\r\n+\r\n+        // Speech input functionality with language support\r\n+        document.getElementById('speech-input-btn').addEventListener('click', function () {\r\n+            if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n+                const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n+\r\n+                // Set language based on source script\r\n+                const sourceScript = document.getElementById('source-script').value;\r\n+                const langMap = {\r\n+                    'devanagari': 'hi-IN',\r\n+                    'bengali': 'bn-IN',\r\n+                    'tamil': 'ta-IN',\r\n+                    'telugu': 'te-IN',\r\n+                    'kannada': 'kn-IN',\r\n+                    'malayalam': 'ml-IN',\r\n+                    'gujarati': 'gu-IN',\r\n+                    'gurmukhi': 'pa-IN',\r\n+                    'itrans': 'en-US'\r\n+                };\r\n+\r\n+                recognition.lang = langMap[sourceScript] || 'en-US';\r\n+                recognition.continuous = false;\r\n+                recognition.interimResults = false;\r\n+\r\n+                recognition.onresult = function (event) {\r\n+                    const transcript = event.results[0][0].transcript;\r\n+                    document.getElementById('input-text').value = transcript;\r\n+                    document.getElementById('char-count').textContent = transcript.length;\r\n+                };\r\n+\r\n+                recognition.onerror = function (event) {\r\n+                    console.error('Speech recognition error', event.error);\r\n+                    if (event.error === 'not-allowed') {\r\n+                        alert('Microphone access is not allowed. Please enable microphone permissions in your browser settings.');\r\n+                    } else {\r\n+                        alert('Error with speech recognition: ' + event.error);\r\n+                    }\r\n+                };\r\n+\r\n+                recognition.start();\r\n+            } else {\r\n+                alert('Speech recognition is not supported in your browser');\r\n+            }\r\n+        });\r\n+\r\n+        // Transliterate button functionality\r\n+        document.getElementById('transliterate-btn').addEventListener('click', function () {\r\n+            const inputText = document.getElementById('input-text').value.trim();\r\n+            const sourceScript = document.getElementById('source-script').value;\r\n+            const targetScript = document.getElementById('target-script').value;\r\n+\r\n+            if (!inputText) {\r\n+                alert('Please enter some text to transliterate');\r\n+                return;\r\n+            }\r\n+\r\n+            // Update script names in info section\r\n+            document.getElementById('source-script-name').textContent = getScriptName(sourceScript);\r\n+            document.getElementById('target-script-name').textContent = getScriptName(targetScript);\r\n+\r\n+            // Show loading state\r\n+            const originalButtonText = this.innerHTML;\r\n+            this.innerHTML = '<i data-feather=\"loader\" class=\"w-5 h-5 mr-2 animate-spin\"></i> Processing...';\r\n+            this.disabled = true;\r\n+            feather.replace();\r\n+\r\n+            // Use setTimeout to allow UI to update before processing\r\n+            setTimeout(() => {\r\n+                try {\r\n+                    // Use Sanscript for transliteration\r\n+                    let result;\r\n+\r\n+                    // Handle special cases for better transliteration\r\n+                    if (sourceScript === 'tamil' && targetScript === 'itrans') {\r\n+                        // Improved Tamil to English transliteration\r\n+                        result = transliterateTamilToEnglish(inputText);\r\n+                    } else if (sourceScript === 'itrans' && targetScript === 'tamil') {\r\n+                        // Improved English to Tamil transliteration\r\n+                        result = transliterateEnglishToTamil(inputText);\r\n+                    } else {\r\n+                        // Default Sanscript transliteration\r\n+                        result = Sanscript.t(inputText, sourceScript, targetScript);\r\n+                    }\r\n+\r\n+                    document.getElementById('output-text').innerHTML =\r\n+                        `<p class=\"text-gray-800\">${result}</p>`;\r\n+                } catch (error) {\r\n+                    console.error('Error:', error);\r\n+                    document.getElementById('output-text').innerHTML =\r\n+                        `<p class=\"text-red-600\">Error: ${error.message}</p>`;\r\n+                } finally {\r\n+                    this.innerHTML = originalButtonText;\r\n+                    this.disabled = false;\r\n+                    feather.replace();\r\n+                }\r\n+            }, 100);\r\n+        });\r\n+\r\n+        // Improved Tamil to English transliteration\r\n+        function transliterateTamilToEnglish(text) {\r\n+            // Common Tamil words and their English equivalents\r\n+            const tamilToEnglishMap = {\r\n+                'வணக்கம்': 'Hello',\r\n+                'நன்றி': 'Thank you',\r\n+                'சென்னை': 'Chennai',\r\n+                'மதுரை': 'Madurai',\r\n+                'கோயம்புத்தூர்': 'Coimbatore',\r\n+                'தமிழ்நாடு': 'Tamil Nadu',\r\n+                'இந்தியா': 'India',\r\n+                'உலகம்': 'World',\r\n+                'பள்ளி': 'School',\r\n+                'மாணவர்': 'Student',\r\n+                'அழகு': 'Beauty',\r\n+                'நீர்': 'Water',\r\n+                'தெரு': 'Street',\r\n+                'வீடு': 'House',\r\n+                'புத்தகம்': 'Book',\r\n+                'பணம்': 'Money'\r\n+            };\r\n+\r\n+            // Replace common words first\r\n+            let result = text;\r\n+            for (const [tamil, english] of Object.entries(tamilToEnglishMap)) {\r\n+                result = result.replace(new RegExp(tamil, 'g'), english);\r\n+            }\r\n+\r\n+            // Use Sanscript for the remaining text\r\n+            return Sanscript.t(result, 'tamil', 'itrans');\r\n+        }\r\n+\r\n+        // Improved English to Tamil transliteration\r\n+        function transliterateEnglishToTamil(text) {\r\n+            // Common English words and their Tamil equivalents\r\n+            const englishToTamilMap = {\r\n+                'hello': 'வணக்கம்',\r\n+                'thank you': 'நன்றி',\r\n+                'india': 'இந்தியா',\r\n+                'water': 'நீர்',\r\n+                'school': 'பள்ளி',\r\n+                'student': 'மாணவர்',\r\n+                'book': 'புத்தகம்',\r\n+                'house': 'வீடு',\r\n+                'street': 'தெரு',\r\n+                'money': 'பணம்',\r\n+                'world': 'உலகம்',\r\n+                'beauty': 'அழகு'\r\n+            };\r\n+\r\n+            // Replace common words first\r\n+            let result = text.toLowerCase();\r\n+            for (const [english, tamil] of Object.entries(englishToTamilMap)) {\r\n+                result = result.replace(new RegExp(english, 'g'), tamil);\r\n+            }\r\n+\r\n+            // Use Sanscript for the remaining text\r\n+            return Sanscript.t(result, 'itrans', 'tamil');\r\n+        }\r\n+\r\n+        // Tab switching\r\n+        document.getElementById('text-tab').addEventListener('click', function (e) {\r\n+            e.preventDefault();\r\n+            document.getElementById('text-tab').classList.add('tab-active');\r\n+            document.getElementById('image-tab').classList.remove('tab-active');\r\n+            document.getElementById('text-input-section').classList.remove('hidden');\r\n+            document.getElementById('image-ocr-section').classList.add('hidden');\r\n+        });\r\n+\r\n+        document.getElementById('image-tab').addEventListener('click', function (e) {\r\n+            e.preventDefault();\r\n+            document.getElementById('image-tab').classList.add('tab-active');\r\n+            document.getElementById('text-tab').classList.remove('tab-active');\r\n+            document.getElementById('image-ocr-section').classList.remove('hidden');\r\n+            document.getElementById('text-input-section').classList.add('hidden');\r\n+        });\r\n+\r\n+        // Image upload preview\r\n+        document.getElementById('ocr-image-upload').addEventListener('change', function (e) {\r\n+            const file = e.target.files[0];\r\n+            if (file) {\r\n+                // Check file size (max 10MB)\r\n+                if (file.size > 10 * 1024 * 1024) {\r\n+                    alert('File size exceeds 10MB limit. Please choose a smaller file.');\r\n+                    this.value = '';\r\n+                    return;\r\n+                }\r\n+\r\n+                const reader = new FileReader();\r\n+                reader.onload = function (event) {\r\n+                    const preview = document.getElementById('image-preview');\r\n+                    preview.innerHTML = `<img src=\"${event.target.result}\" alt=\"Preview\" class=\"max-h-48 mx-auto rounded\">`;\r\n+                }\r\n+                reader.readAsDataURL(file);\r\n+            }\r\n+        });\r\n+\r\n+        // OCR processing button\r\n+        document.getElementById('ocr-process-btn').addEventListener('click', async function () {\r\n+            const fileInput = document.getElementById('ocr-image-upload');\r\n+            const language = document.getElementById('ocr-language').value;\r\n+\r\n+            if (!fileInput.files || fileInput.files.length === 0) {\r\n+                alert('Please upload an image first');\r\n+                return;\r\n+            }\r\n+\r\n+            const loader = document.getElementById('ocr-loader');\r\n+            const btnText = document.getElementById('ocr-btn-text');\r\n+            const extractedTextDiv = document.getElementById('ocr-extracted-text');\r\n+            const progressSection = document.getElementById('ocr-progress');\r\n+            const progressBar = document.getElementById('ocr-progress-bar');\r\n+            const progressStatus = document.getElementById('ocr-progress-status');\r\n+            const progressPercentage = document.getElementById('ocr-progress-percentage');\r\n+\r\n+            btnText.textContent = 'Processing';\r\n+            loader.classList.remove('hidden');\r\n+            progressSection.classList.remove('hidden');\r\n+            this.disabled = true;\r\n+\r\n+            try {\r\n+                // Use Tesseract.js for OCR\r\n+                const result = await Tesseract.recognize(\r\n+                    fileInput.files[0],\r\n+                    language,\r\n+                    {\r\n+                        logger: message => {\r\n+                            if (message.status === 'recognizing text') {\r\n+                                const progress = Math.round(message.progress * 100);\r\n+                                progressBar.style.width = `${progress}%`;\r\n+                                progressPercentage.textContent = `${progress}%`;\r\n+\r\n+                                if (message.progress === 1) {\r\n+                                    progressStatus.textContent = 'Finalizing...';\r\n+                                } else {\r\n+                                    progressStatus.textContent = 'Recognizing text...';\r\n+                                }\r\n+                            }\r\n+                        }\r\n+                    }\r\n+                );\r\n+\r\n+                extractedTextDiv.innerHTML = `<p class=\"text-gray-800\">${result.data.text}</p>`;\r\n+\r\n+            } catch (error) {\r\n+                console.error('Error:', error);\r\n+                extractedTextDiv.innerHTML = `<p class=\"text-red-600\">Error: ${error.message}</p>`;\r\n+            } finally {\r\n+                btnText.textContent = 'Extract Text';\r\n+                loader.classList.add('hidden');\r\n+                progressSection.classList.add('hidden');\r\n+                this.disabled = false;\r\n+            }\r\n+        });\r\n+\r\n+        // Copy OCR text button\r\n+        document.getElementById('ocr-copy-btn').addEventListener('click', function () {\r\n+            const extractedText = document.getElementById('ocr-extracted-text').textContent;\r\n+\r\n+            if (!extractedText || extractedText.includes('Extracted text will appear here')) {\r\n+                alert('No text to copy. Please extract text from an image first.');\r\n+                return;\r\n+            }\r\n+\r\n+            navigator.clipboard.writeText(extractedText).then(() => {\r\n+                const originalText = this.innerHTML;\r\n+                this.innerHTML = '<i data-feather=\"check\" class=\"w-3 h-3 inline mr-1\"></i> Copied!';\r\n+                feather.replace();\r\n+                setTimeout(() => {\r\n+                    this.innerHTML = originalText;\r\n+                    feather.replace();\r\n+                }, 2000);\r\n+            });\r\n+        });\r\n+\r\n+        // Use OCR text for transliteration button\r\n+        document.getElementById('ocr-use-btn').addEventListener('click', function () {\r\n+            const extractedText = document.getElementById('ocr-extracted-text').textContent;\r\n+\r\n+            if (!extractedText || extractedText.includes('Extracted text will appear here')) {\r\n+                alert('No text to use. Please extract text from an image first.');\r\n+                return;\r\n+            }\r\n+\r\n+            document.getElementById('input-text').value = extractedText;\r\n+            document.getElementById('char-count').textContent = extractedText.length;\r\n+\r\n+            // Switch to text tab\r\n+            document.getElementById('text-tab').classList.add('tab-active');\r\n+            document.getElementById('image-tab').classList.remove('tab-active');\r\n+            document.getElementById('text-input-section').classList.remove('hidden');\r\n+            document.getElementById('image-ocr-section').classList.add('hidden');\r\n+\r\n+            // Auto-select the script based on OCR language\r\n+            const ocrLanguage = document.getElementById('ocr-language').value;\r\n+            const languageToScriptMap = {\r\n+                'hin': 'devanagari',\r\n+                'ben': 'bengali',\r\n+                'tam': 'tamil',\r\n+                'tel': 'telugu',\r\n+                'kan': 'kannada',\r\n+                'mal': 'malayalam',\r\n+                'guj': 'gujarati',\r\n+                'pan': 'gurmukhi',\r\n+                'ori': 'oriya',\r\n+                'eng': 'itrans'\r\n+            };\r\n+\r\n+            if (languageToScriptMap[ocrLanguage]) {\r\n+                document.getElementById('source-script').value = languageToScriptMap[ocrLanguage];\r\n+            }\r\n+        });\r\n+\r\n+        // Cancel OCR button\r\n+        document.getElementById('ocr-cancel-btn').addEventListener('click', function () {\r\n+            document.getElementById('ocr-image-upload').value = '';\r\n+            document.getElementById('image-preview').innerHTML = '<p class=\"text-gray-400 italic\">Image preview will appear here...</p>';\r\n+            document.getElementById('ocr-extracted-text').innerHTML = '<p class=\"text-gray-400 italic\">Extracted text will appear here...</p>';\r\n+            document.getElementById('ocr-progress').classList.add('hidden');\r\n+        });\r\n+\r\n+        // Helper function to get script name from code\r\n+        function getScriptName(code) {\r\n+            const scripts = {\r\n+                'devanagari': 'Hindi (Devanagari)',\r\n+                'bengali': 'Bengali',\r\n+                'tamil': 'Tamil',\r\n+                'telugu': 'Telugu',\r\n+                'kannada': 'Kannada',\r\n+                'malayalam': 'Malayalam',\r\n+                'gujarati': 'Gujarati',\r\n+                'gurmukhi': 'Punjabi (Gurmukhi)',\r\n+                'oriya': 'Odia',\r\n+                'itrans': 'English (Latin)',\r\n+                'auto': 'Auto Detect'\r\n+            };\r\n+            return scripts[code] || code;\r\n+        }\r\n+\r\n+        // Update script names when dropdowns change\r\n+        document.getElementById('source-script').addEventListener('change', function () {\r\n+            document.getElementById('source-script-name').textContent = getScriptName(this.value);\r\n+        });\r\n+\r\n+        document.getElementById('target-script').addEventListener('change', function () {\r\n+            document.getElementById('target-script-name').textContent = getScriptName(this.value);\r\n+        });\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758299289916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n <head>\r\n     <meta charset=\"UTF-8\">\r\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Transliteration Tool | Bharat Script</title>\r\n+    <title>Advanced Transliteration Tool | Bharat Script</title>\r\n     <link rel=\"icon\" type=\"image/x-icon\" href=\"/static/favicon.ico\">\r\n     <script src=\"https://cdn.tailwindcss.com\"></script>\r\n     <link href=\"https://unpkg.com/aos@2.3.1/dist/aos.css\" rel=\"stylesheet\">\r\n     <script src=\"https://unpkg.com/aos@2.3.1/dist/aos.js\"></script>\r\n@@ -84,8 +84,141 @@\n \r\n         .language-option span {\r\n             margin-left: 8px;\r\n         }\r\n+\r\n+        /* Camera and OCR enhancements */\r\n+        .camera-container {\r\n+            position: relative;\r\n+            width: 100%;\r\n+            max-width: 640px;\r\n+            margin: 0 auto;\r\n+        }\r\n+\r\n+        #camera-video {\r\n+            width: 100%;\r\n+            border-radius: 8px;\r\n+            background-color: #000;\r\n+        }\r\n+\r\n+        .camera-controls {\r\n+            position: absolute;\r\n+            bottom: 20px;\r\n+            left: 0;\r\n+            right: 0;\r\n+            display: flex;\r\n+            justify-content: center;\r\n+            gap: 10px;\r\n+        }\r\n+\r\n+        .camera-btn {\r\n+            background: rgba(255, 255, 255, 0.8);\r\n+            border-radius: 50%;\r\n+            width: 50px;\r\n+            height: 50px;\r\n+            display: flex;\r\n+            align-items: center;\r\n+            justify-content: center;\r\n+            cursor: pointer;\r\n+            transition: all 0.3s ease;\r\n+        }\r\n+\r\n+        .camera-btn:hover {\r\n+            background: rgba(255, 255, 255, 1);\r\n+            transform: scale(1.05);\r\n+        }\r\n+\r\n+        .ocr-selection-overlay {\r\n+            position: absolute;\r\n+            top: 0;\r\n+            left: 0;\r\n+            border: 2px dashed #F97316;\r\n+            background-color: rgba(249, 115, 22, 0.1);\r\n+            pointer-events: none;\r\n+            display: none;\r\n+        }\r\n+\r\n+        .text-selection-mode .ocr-selection-overlay {\r\n+            pointer-events: all;\r\n+            cursor: crosshair;\r\n+        }\r\n+\r\n+        .enhanced-ocr-result {\r\n+            position: relative;\r\n+            border: 1px solid #e5e7eb;\r\n+            border-radius: 0.375rem;\r\n+            padding: 0.75rem;\r\n+            background-color: #f9fafb;\r\n+            min-height: 200px;\r\n+        }\r\n+\r\n+        .word-box {\r\n+            display: inline-block;\r\n+            padding: 2px 4px;\r\n+            margin: 1px;\r\n+            border-radius: 3px;\r\n+            background-color: rgba(249, 115, 22, 0.1);\r\n+            border: 1px solid rgba(249, 115, 22, 0.3);\r\n+            cursor: pointer;\r\n+            transition: all 0.2s ease;\r\n+        }\r\n+\r\n+        .word-box:hover {\r\n+            background-color: rgba(249, 115, 22, 0.2);\r\n+            transform: translateY(-1px);\r\n+        }\r\n+\r\n+        .word-box.selected {\r\n+            background-color: rgba(249, 115, 22, 0.3);\r\n+            border: 1px solid #F97316;\r\n+        }\r\n+\r\n+        .ocr-action-bar {\r\n+            display: flex;\r\n+            justify-content: space-between;\r\n+            align-items: center;\r\n+            margin-top: 10px;\r\n+            padding: 8px;\r\n+            background-color: #f3f4f6;\r\n+            border-radius: 4px;\r\n+        }\r\n+        \r\n+        .accuracy-indicator {\r\n+            display: inline-block;\r\n+            padding: 2px 6px;\r\n+            border-radius: 10px;\r\n+            font-size: 0.75rem;\r\n+            font-weight: 600;\r\n+            margin-left: 5px;\r\n+        }\r\n+        \r\n+        .high-accuracy {\r\n+            background-color: #10B981;\r\n+            color: white;\r\n+        }\r\n+        \r\n+        .medium-accuracy {\r\n+            background-color: #F59E0B;\r\n+            color: white;\r\n+        }\r\n+        \r\n+        .low-accuracy {\r\n+            background-color: #EF4444;\r\n+            color: white;\r\n+        }\r\n+        \r\n+        .ocr-word-confidence {\r\n+            font-size: 0.7rem;\r\n+            color: #6B7280;\r\n+            display: block;\r\n+        }\r\n+        \r\n+        .pronunciation-hint {\r\n+            font-size: 0.8rem;\r\n+            color: #6B7280;\r\n+            font-style: italic;\r\n+            margin-top: 4px;\r\n+        }\r\n     </style>\r\n </head>\r\n \r\n <body class=\"gradient-bg min-h-screen\">\r\n@@ -122,12 +255,12 @@\n     <!-- Main Content -->\r\n     <main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n         <div class=\"text-center mb-8\" data-aos=\"fade-up\">\r\n             <h1 class=\"text-3xl font-extrabold text-gray-900 sm:text-4xl\">\r\n-                <span class=\"gradient-text\">Script Transliterator</span>\r\n+                <span class=\"gradient-text\">Advanced Script Transliterator</span>\r\n             </h1>\r\n             <p class=\"mt-3 max-w-2xl mx-auto text-xl text-gray-500 sm:mt-4\">\r\n-                Convert text between different Indian scripts instantly\r\n+                Convert text between different Indian scripts with high accuracy and pronunciation guidance\r\n             </p>\r\n         </div>\r\n \r\n         <!-- Tabs -->\r\n@@ -164,8 +297,9 @@\n                                     <option value=\"malayalam\">Malayalam</option>\r\n                                     <option value=\"gujarati\">Gujarati</option>\r\n                                     <option value=\"gurmukhi\">Punjabi (Gurmukhi)</option>\r\n                                     <option value=\"oriya\">Odia</option>\r\n+                                    <option value=\"itrans\">Latin (ITRANS)</option>\r\n                                 </select>\r\n                             </div>\r\n                         </div>\r\n                         <textarea id=\"input-text\" rows=\"12\"\r\n@@ -178,8 +312,11 @@\n                             <button id=\"speech-input-btn\" class=\"text-sm text-orange-600 hover:text-orange-800\">\r\n                                 <i data-feather=\"mic\" class=\"w-4 h-4 inline mr-1\"></i> Speech Input\r\n                             </button>\r\n                         </div>\r\n+                        <div id=\"pronunciation-hints\" class=\"mt-2 hidden\">\r\n+                            <p class=\"text-xs text-gray-500\">Pronunciation hints will appear here as you type</p>\r\n+                        </div>\r\n                     </div>\r\n \r\n                     <!-- Output Section -->\r\n                     <div>\r\n@@ -195,15 +332,21 @@\n                                     <option value=\"tamil\">Tamil</option>\r\n                                     <option value=\"telugu\">Telugu</option>\r\n                                     <option value=\"kannada\">Kannada</option>\r\n                                     <option value=\"malayalam\">Malayalam</option>\r\n+                                    <option value=\"gujarati\">Gujarati</option>\r\n+                                    <option value=\"gurmukhi\">Punjabi (Gurmukhi)</option>\r\n+                                    <option value=\"oriya\">Odia</option>\r\n                                 </select>\r\n                             </div>\r\n                         </div>\r\n                         <div id=\"output-text\"\r\n                             class=\"shadow-sm block w-full sm:text-sm border border-gray-300 rounded-md p-3 bg-gray-50 min-h-[200px]\">\r\n                             <p class=\"text-gray-400 italic\">Transliterated text will appear here...</p>\r\n                         </div>\r\n+                        <div id=\"output-pronunciation\" class=\"mt-2 hidden\">\r\n+                            <p class=\"text-xs text-gray-500\">Pronunciation guide will appear here</p>\r\n+                        </div>\r\n                         <div class=\"mt-2 flex justify-end space-x-3\">\r\n                             <button id=\"copy-btn\"\r\n                                 class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n                                 <i data-feather=\"copy\" class=\"w-4 h-4 mr-1\"></i> Copy\r\n@@ -233,25 +376,60 @@\n         <!-- Image OCR Section (Hidden by default) -->\r\n         <div id=\"image-ocr-section\" class=\"bg-white shadow rounded-lg overflow-hidden mt-8 hidden\" data-aos=\"fade-up\">\r\n             <div class=\"p-6\">\r\n                 <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Upload Image with Text</h3>\r\n-                <div class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\r\n-                    <div class=\"flex justify-center\">\r\n-                        <i data-feather=\"image\" class=\"w-12 w-12 text-gray-400\"></i>\r\n+                \r\n+                <!-- Camera Mode Toggle -->\r\n+                <div class=\"flex justify-center mb-4\">\r\n+                    <div class=\"inline-flex rounded-md shadow-sm\" role=\"group\">\r\n+                        <button id=\"upload-mode-btn\" type=\"button\" class=\"px-4 py-2 text-sm font-medium text-white bg-orange-600 border border-orange-600 rounded-l-lg hover:bg-orange-700 focus:z-10 focus:ring-2 focus:ring-orange-500\">\r\n+                            <i data-feather=\"upload\" class=\"w-4 h-4 inline mr-1\"></i> Upload\r\n+                        </button>\r\n+                        <button id=\"camera-mode-btn\" type=\"button\" class=\"px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-r-md hover:bg-gray-100 hover:text-orange-700 focus:z-10 focus:ring-2 focus:ring-orange-500\">\r\n+                            <i data-feather=\"camera\" class=\"w-4 h-4 inline mr-1\"></i> Camera\r\n+                        </button>\r\n                     </div>\r\n-                    <div class=\"mt-4 flex text-sm text-gray-600\">\r\n-                        <label\r\n-                            class=\"file-upload relative cursor-pointer bg-white rounded-md font-medium text-orange-600 hover:text-orange-500 focus-within:outline-none\">\r\n-                            <span>Upload an image file</span>\r\n-                            <input type=\"file\" id=\"ocr-image-upload\" class=\"file-upload-input\" accept=\"image/*\">\r\n-                        </label>\r\n-                        <p class=\"pl-1\">or drag and drop</p>\r\n+                </div>\r\n+\r\n+                <!-- Upload Section -->\r\n+                <div id=\"upload-section\">\r\n+                    <div class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\r\n+                        <div class=\"flex justify-center\">\r\n+                            <i data-feather=\"image\" class=\"w-12 w-12 text-gray-400\"></i>\r\n+                        </div>\r\n+                        <div class=\"mt-4 flex text-sm text-gray-600\">\r\n+                            <label\r\n+                                class=\"file-upload relative cursor-pointer bg-white rounded-md font-medium text-orange-600 hover:text-orange-500 focus-within:outline-none\">\r\n+                                <span>Upload an image file</span>\r\n+                                <input type=\"file\" id=\"ocr-image-upload\" class=\"file-upload-input\" accept=\"image/*\">\r\n+                            </label>\r\n+                            <p class=\"pl-1\">or drag and drop</p>\r\n+                        </div>\r\n+                        <p class=\"text-xs text-gray-500 mt-2\">\r\n+                            PNG, JPG, GIF up to 10MB\r\n+                        </p>\r\n                     </div>\r\n-                    <p class=\"text-xs text-gray-500 mt-2\">\r\n-                        PNG, JPG, GIF up to 10MB\r\n-                    </p>\r\n                 </div>\r\n \r\n+                <!-- Camera Section -->\r\n+                <div id=\"camera-section\" class=\"hidden\">\r\n+                    <div class=\"camera-container\">\r\n+                        <video id=\"camera-video\" autoplay playsinline></video>\r\n+                        <div class=\"camera-controls\">\r\n+                            <button id=\"capture-btn\" class=\"camera-btn\">\r\n+                                <i data-feather=\"camera\" class=\"text-gray-800\"></i>\r\n+                            </button>\r\n+                            <button id=\"switch-camera-btn\" class=\"camera-btn\">\r\n+                                <i data-feather=\"refresh-cw\" class=\"text-gray-800\"></i>\r\n+                            </button>\r\n+                        </div>\r\n+                        <div class=\"ocr-selection-overlay\"></div>\r\n+                    </div>\r\n+                    <div class=\"mt-4 text-center\">\r\n+                        <canvas id=\"capture-canvas\" class=\"hidden\"></canvas>\r\n+                    </div>\r\n+                </div>\r\n+\r\n                 <div class=\"mt-6 grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n                     <!-- Original Image Preview -->\r\n                     <div>\r\n                         <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Original Image</h4>\r\n@@ -265,11 +443,13 @@\n                     <div>\r\n                         <div class=\"flex justify-between items-center mb-2\">\r\n                             <h4 class=\"text-sm font-medium text-gray-700\">Extracted Text</h4>\r\n                             <div class=\"flex items-center\">\r\n+                                <span id=\"detected-language\" class=\"text-xs text-gray-500 mr-2 hidden\">Detected: </span>\r\n                                 <label class=\"mr-2 text-xs font-medium text-gray-700\">Language:</label>\r\n                                 <select id=\"ocr-language\"\r\n                                     class=\"border-gray-300 focus:border-orange-500 focus:ring-orange-500 rounded-md shadow-sm text-xs\">\r\n+                                    <option value=\"auto\">Auto Detect</option>\r\n                                     <option value=\"eng\">English</option>\r\n                                     <option value=\"hin\">Hindi</option>\r\n                                     <option value=\"ben\">Bengali</option>\r\n                                     <option value=\"tam\">Tamil</option>\r\n@@ -281,19 +461,28 @@\n                                     <option value=\"ori\">Odia</option>\r\n                                 </select>\r\n                             </div>\r\n                         </div>\r\n-                        <div id=\"ocr-extracted-text\"\r\n-                            class=\"border border-gray-200 rounded-md p-3 bg-gray-50 min-h-[200px]\">\r\n+                        <div id=\"ocr-extracted-text\" class=\"enhanced-ocr-result\">\r\n                             <p class=\"text-gray-400 italic\">Extracted text will appear here...</p>\r\n                         </div>\r\n-                        <div class=\"mt-2 flex justify-end\">\r\n-                            <button id=\"ocr-copy-btn\" class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n-                                <i data-feather=\"copy\" class=\"w-3 h-3 inline mr-1\"></i> Copy Text\r\n-                            </button>\r\n-                            <button id=\"ocr-use-btn\" class=\"text-xs text-orange-600 hover:text-orange-800\">\r\n-                                <i data-feather=\"arrow-right\" class=\"w-3 h-3 inline mr-1\"></i> Use for Transliteration\r\n-                            </button>\r\n+                        <div class=\"ocr-action-bar\">\r\n+                            <div>\r\n+                                <button id=\"ocr-select-text-btn\" class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n+                                    <i data-feather=\"edit\" class=\"w-3 h-3 inline mr-1\"></i> Select Text\r\n+                                </button>\r\n+                                <button id=\"ocr-clear-selection-btn\" class=\"text-xs text-gray-600 hover:text-gray-800 hidden\">\r\n+                                    <i data-feather=\"x\" class=\"w-3 h-3 inline mr-1\"></i> Clear Selection\r\n+                                </button>\r\n+                            </div>\r\n+                            <div>\r\n+                                <button id=\"ocr-copy-btn\" class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n+                                    <i data-feather=\"copy\" class=\"w-3 h-3 inline mr-1\"></i> Copy Text\r\n+                                </button>\r\n+                                <button id=\"ocr-use-btn\" class=\"text-xs text-orange-600 hover:text-orange-800\">\r\n+                                    <i data-feather=\"arrow-right\" class=\"w-3 h-3 inline mr-1\"></i> Use for Transliteration\r\n+                                </button>\r\n+                            </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n \r\n@@ -459,452 +648,23 @@\n             easing: 'ease-in-out',\r\n             once: true\r\n         });\r\n \r\n-        // Character count for input text\r\n-        document.getElementById('input-text').addEventListener('input', function () {\r\n-            document.getElementById('char-count').textContent = this.value.length;\r\n-        });\r\n-\r\n-        // Copy button functionality\r\n-        document.getElementById('copy-btn').addEventListener('click', function () {\r\n-            const outputText = document.getElementById('output-text').textContent;\r\n-            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n-                alert('No text to copy. Please transliterate some text first.');\r\n-                return;\r\n-            }\r\n-\r\n-            navigator.clipboard.writeText(outputText).then(() => {\r\n-                const originalText = this.innerHTML;\r\n-                this.innerHTML = '<i data-feather=\"check\" class=\"w-4 h-4 mr-1\"></i> Copied!';\r\n-                feather.replace();\r\n-                setTimeout(() => {\r\n-                    this.innerHTML = originalText;\r\n-                    feather.replace();\r\n-                }, 2000);\r\n-            }).catch(err => {\r\n-                console.error('Failed to copy text: ', err);\r\n-                alert('Failed to copy text. Please try again.');\r\n-            });\r\n-        });\r\n-\r\n-        // Speak button functionality with language support\r\n-        document.getElementById('speak-btn').addEventListener('click', function () {\r\n-            const outputText = document.getElementById('output-text').textContent;\r\n-            const targetScript = document.getElementById('target-script').value;\r\n-\r\n-            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n-                alert('No text to speak. Please transliterate some text first.');\r\n-                return;\r\n-            }\r\n-\r\n-            if ('speechSynthesis' in window) {\r\n-                // Cancel any ongoing speech\r\n-                window.speechSynthesis.cancel();\r\n-\r\n-                const utterance = new SpeechSynthesisUtterance(outputText);\r\n-\r\n-                // Set language based on target script\r\n-                const langMap = {\r\n-                    'devanagari': 'hi-IN',\r\n-                    'bengali': 'bn-IN',\r\n-                    'tamil': 'ta-IN',\r\n-                    'telugu': 'te-IN',\r\n-                    'kannada': 'kn-IN',\r\n-                    'malayalam': 'ml-IN',\r\n-                    'gujarati': 'gu-IN',\r\n-                    'gurmukhi': 'pa-IN',\r\n-                    'itrans': 'en-US'\r\n-                };\r\n-\r\n-                utterance.lang = langMap[targetScript] || 'en-US';\r\n-                utterance.rate = 0.8;\r\n-\r\n-                // Try to set a voice that supports the language\r\n-                const voices = speechSynthesis.getVoices();\r\n-                const preferredVoice = voices.find(voice =>\r\n-                    voice.lang === utterance.lang\r\n-                );\r\n-\r\n-                if (preferredVoice) {\r\n-                    utterance.voice = preferredVoice;\r\n-                }\r\n-\r\n-                speechSynthesis.speak(utterance);\r\n-            } else {\r\n-                alert('Text-to-speech is not supported in your browser');\r\n-            }\r\n-        });\r\n-\r\n-        // Download button functionality\r\n-        document.getElementById('download-btn').addEventListener('click', function () {\r\n-            const outputText = document.getElementById('output-text').textContent;\r\n-\r\n-            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n-                alert('No text to download. Please transliterate some text first.');\r\n-                return;\r\n-            }\r\n-\r\n-            const blob = new Blob([outputText], { type: 'text/plain' });\r\n-            const url = URL.createObjectURL(blob);\r\n-            const a = document.createElement('a');\r\n-            a.href = url;\r\n-\r\n-            // Create filename based on scripts used\r\n-            const sourceScript = document.getElementById('source-script').value;\r\n-            const targetScript = document.getElementById('target-script').value;\r\n-            a.download = `transliteration-${sourceScript}-to-${targetScript}.txt`;\r\n-\r\n-            document.body.appendChild(a);\r\n-            a.click();\r\n-            document.body.removeChild(a);\r\n-            URL.revokeObjectURL(url);\r\n-        });\r\n-\r\n-        // Speech input functionality with language support\r\n-        document.getElementById('speech-input-btn').addEventListener('click', function () {\r\n-            if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n-                const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n-\r\n-                // Set language based on source script\r\n-                const sourceScript = document.getElementById('source-script').value;\r\n-                const langMap = {\r\n-                    'devanagari': 'hi-IN',\r\n-                    'bengali': 'bn-IN',\r\n-                    'tamil': 'ta-IN',\r\n-                    'telugu': 'te-IN',\r\n-                    'kannada': 'kn-IN',\r\n-                    'malayalam': 'ml-IN',\r\n-                    'gujarati': 'gu-IN',\r\n-                    'gurmukhi': 'pa-IN',\r\n-                    'itrans': 'en-US'\r\n-                };\r\n-\r\n-                recognition.lang = langMap[sourceScript] || 'en-US';\r\n-                recognition.continuous = false;\r\n-                recognition.interimResults = false;\r\n-\r\n-                recognition.onresult = function (event) {\r\n-                    const transcript = event.results[0][0].transcript;\r\n-                    document.getElementById('input-text').value = transcript;\r\n-                    document.getElementById('char-count').textContent = transcript.length;\r\n-                };\r\n-\r\n-                recognition.onerror = function (event) {\r\n-                    console.error('Speech recognition error', event.error);\r\n-                    if (event.error === 'not-allowed') {\r\n-                        alert('Microphone access is not allowed. Please enable microphone permissions in your browser settings.');\r\n-                    } else {\r\n-                        alert('Error with speech recognition: ' + event.error);\r\n-                    }\r\n-                };\r\n-\r\n-                recognition.start();\r\n-            } else {\r\n-                alert('Speech recognition is not supported in your browser');\r\n-            }\r\n-        });\r\n-\r\n-        // Transliterate button functionality\r\n-        document.getElementById('transliterate-btn').addEventListener('click', function () {\r\n-            const inputText = document.getElementById('input-text').value.trim();\r\n-            const sourceScript = document.getElementById('source-script').value;\r\n-            const targetScript = document.getElementById('target-script').value;\r\n-\r\n-            if (!inputText) {\r\n-                alert('Please enter some text to transliterate');\r\n-                return;\r\n-            }\r\n-\r\n-            // Update script names in info section\r\n-            document.getElementById('source-script-name').textContent = getScriptName(sourceScript);\r\n-            document.getElementById('target-script-name').textContent = getScriptName(targetScript);\r\n-\r\n-            // Show loading state\r\n-            const originalButtonText = this.innerHTML;\r\n-            this.innerHTML = '<i data-feather=\"loader\" class=\"w-5 h-5 mr-2 animate-spin\"></i> Processing...';\r\n-            this.disabled = true;\r\n-            feather.replace();\r\n-\r\n-            // Use setTimeout to allow UI to update before processing\r\n-            setTimeout(() => {\r\n-                try {\r\n-                    // Use Sanscript for transliteration\r\n-                    let result;\r\n-\r\n-                    // Handle special cases for better transliteration\r\n-                    if (sourceScript === 'tamil' && targetScript === 'itrans') {\r\n-                        // Improved Tamil to English transliteration\r\n-                        result = transliterateTamilToEnglish(inputText);\r\n-                    } else if (sourceScript === 'itrans' && targetScript === 'tamil') {\r\n-                        // Improved English to Tamil transliteration\r\n-                        result = transliterateEnglishToTamil(inputText);\r\n-                    } else {\r\n-                        // Default Sanscript transliteration\r\n-                        result = Sanscript.t(inputText, sourceScript, targetScript);\r\n-                    }\r\n-\r\n-                    document.getElementById('output-text').innerHTML =\r\n-                        `<p class=\"text-gray-800\">${result}</p>`;\r\n-                } catch (error) {\r\n-                    console.error('Error:', error);\r\n-                    document.getElementById('output-text').innerHTML =\r\n-                        `<p class=\"text-red-600\">Error: ${error.message}</p>`;\r\n-                } finally {\r\n-                    this.innerHTML = originalButtonText;\r\n-                    this.disabled = false;\r\n-                    feather.replace();\r\n-                }\r\n-            }, 100);\r\n-        });\r\n-\r\n-        // Improved Tamil to English transliteration\r\n-        function transliterateTamilToEnglish(text) {\r\n-            // Common Tamil words and their English equivalents\r\n-            const tamilToEnglishMap = {\r\n-                'வணக்கம்': 'Hello',\r\n-                'நன்றி': 'Thank you',\r\n-                'சென்னை': 'Chennai',\r\n-                'மதுரை': 'Madurai',\r\n-                'கோயம்புத்தூர்': 'Coimbatore',\r\n-                'தமிழ்நாடு': 'Tamil Nadu',\r\n-                'இந்தியா': 'India',\r\n-                'உலகம்': 'World',\r\n-                'பள்ளி': 'School',\r\n-                'மாணவர்': 'Student',\r\n-                'அழகு': 'Beauty',\r\n-                'நீர்': 'Water',\r\n-                'தெரு': 'Street',\r\n-                'வீடு': 'House',\r\n-                'புத்தகம்': 'Book',\r\n-                'பணம்': 'Money'\r\n-            };\r\n-\r\n-            // Replace common words first\r\n-            let result = text;\r\n-            for (const [tamil, english] of Object.entries(tamilToEnglishMap)) {\r\n-                result = result.replace(new RegExp(tamil, 'g'), english);\r\n-            }\r\n-\r\n-            // Use Sanscript for the remaining text\r\n-            return Sanscript.t(result, 'tamil', 'itrans');\r\n-        }\r\n-\r\n-        // Improved English to Tamil transliteration\r\n-        function transliterateEnglishToTamil(text) {\r\n-            // Common English words and their Tamil equivalents\r\n-            const englishToTamilMap = {\r\n-                'hello': 'வணக்கம்',\r\n-                'thank you': 'நன்றி',\r\n-                'india': 'இந்தியா',\r\n-                'water': 'நீர்',\r\n-                'school': 'பள்ளி',\r\n-                'student': 'மாணவர்',\r\n-                'book': 'புத்தகம்',\r\n-                'house': 'வீடு',\r\n-                'street': 'தெரு',\r\n-                'money': 'பணம்',\r\n-                'world': 'உலகம்',\r\n-                'beauty': 'அழகு'\r\n-            };\r\n-\r\n-            // Replace common words first\r\n-            let result = text.toLowerCase();\r\n-            for (const [english, tamil] of Object.entries(englishToTamilMap)) {\r\n-                result = result.replace(new RegExp(english, 'g'), tamil);\r\n-            }\r\n-\r\n-            // Use Sanscript for the remaining text\r\n-            return Sanscript.t(result, 'itrans', 'tamil');\r\n-        }\r\n-\r\n-        // Tab switching\r\n-        document.getElementById('text-tab').addEventListener('click', function (e) {\r\n-            e.preventDefault();\r\n-            document.getElementById('text-tab').classList.add('tab-active');\r\n-            document.getElementById('image-tab').classList.remove('tab-active');\r\n-            document.getElementById('text-input-section').classList.remove('hidden');\r\n-            document.getElementById('image-ocr-section').classList.add('hidden');\r\n-        });\r\n-\r\n-        document.getElementById('image-tab').addEventListener('click', function (e) {\r\n-            e.preventDefault();\r\n-            document.getElementById('image-tab').classList.add('tab-active');\r\n-            document.getElementById('text-tab').classList.remove('tab-active');\r\n-            document.getElementById('image-ocr-section').classList.remove('hidden');\r\n-            document.getElementById('text-input-section').classList.add('hidden');\r\n-        });\r\n-\r\n-        // Image upload preview\r\n-        document.getElementById('ocr-image-upload').addEventListener('change', function (e) {\r\n-            const file = e.target.files[0];\r\n-            if (file) {\r\n-                // Check file size (max 10MB)\r\n-                if (file.size > 10 * 1024 * 1024) {\r\n-                    alert('File size exceeds 10MB limit. Please choose a smaller file.');\r\n-                    this.value = '';\r\n-                    return;\r\n-                }\r\n-\r\n-                const reader = new FileReader();\r\n-                reader.onload = function (event) {\r\n-                    const preview = document.getElementById('image-preview');\r\n-                    preview.innerHTML = `<img src=\"${event.target.result}\" alt=\"Preview\" class=\"max-h-48 mx-auto rounded\">`;\r\n-                }\r\n-                reader.readAsDataURL(file);\r\n-            }\r\n-        });\r\n-\r\n-        // OCR processing button\r\n-        document.getElementById('ocr-process-btn').addEventListener('click', async function () {\r\n-            const fileInput = document.getElementById('ocr-image-upload');\r\n-            const language = document.getElementById('ocr-language').value;\r\n-\r\n-            if (!fileInput.files || fileInput.files.length === 0) {\r\n-                alert('Please upload an image first');\r\n-                return;\r\n-            }\r\n-\r\n-            const loader = document.getElementById('ocr-loader');\r\n-            const btnText = document.getElementById('ocr-btn-text');\r\n-            const extractedTextDiv = document.getElementById('ocr-extracted-text');\r\n-            const progressSection = document.getElementById('ocr-progress');\r\n-            const progressBar = document.getElementById('ocr-progress-bar');\r\n-            const progressStatus = document.getElementById('ocr-progress-status');\r\n-            const progressPercentage = document.getElementById('ocr-progress-percentage');\r\n-\r\n-            btnText.textContent = 'Processing';\r\n-            loader.classList.remove('hidden');\r\n-            progressSection.classList.remove('hidden');\r\n-            this.disabled = true;\r\n-\r\n-            try {\r\n-                // Use Tesseract.js for OCR\r\n-                const result = await Tesseract.recognize(\r\n-                    fileInput.files[0],\r\n-                    language,\r\n-                    {\r\n-                        logger: message => {\r\n-                            if (message.status === 'recognizing text') {\r\n-                                const progress = Math.round(message.progress * 100);\r\n-                                progressBar.style.width = `${progress}%`;\r\n-                                progressPercentage.textContent = `${progress}%`;\r\n-\r\n-                                if (message.progress === 1) {\r\n-                                    progressStatus.textContent = 'Finalizing...';\r\n-                                } else {\r\n-                                    progressStatus.textContent = 'Recognizing text...';\r\n-                                }\r\n-                            }\r\n-                        }\r\n-                    }\r\n-                );\r\n-\r\n-                extractedTextDiv.innerHTML = `<p class=\"text-gray-800\">${result.data.text}</p>`;\r\n-\r\n-            } catch (error) {\r\n-                console.error('Error:', error);\r\n-                extractedTextDiv.innerHTML = `<p class=\"text-red-600\">Error: ${error.message}</p>`;\r\n-            } finally {\r\n-                btnText.textContent = 'Extract Text';\r\n-                loader.classList.add('hidden');\r\n-                progressSection.classList.add('hidden');\r\n-                this.disabled = false;\r\n-            }\r\n-        });\r\n-\r\n-        // Copy OCR text button\r\n-        document.getElementById('ocr-copy-btn').addEventListener('click', function () {\r\n-            const extractedText = document.getElementById('ocr-extracted-text').textContent;\r\n-\r\n-            if (!extractedText || extractedText.includes('Extracted text will appear here')) {\r\n-                alert('No text to copy. Please extract text from an image first.');\r\n-                return;\r\n-            }\r\n-\r\n-            navigator.clipboard.writeText(extractedText).then(() => {\r\n-                const originalText = this.innerHTML;\r\n-                this.innerHTML = '<i data-feather=\"check\" class=\"w-3 h-3 inline mr-1\"></i> Copied!';\r\n-                feather.replace();\r\n-                setTimeout(() => {\r\n-                    this.innerHTML = originalText;\r\n-                    feather.replace();\r\n-                }, 2000);\r\n-            });\r\n-        });\r\n-\r\n-        // Use OCR text for transliteration button\r\n-        document.getElementById('ocr-use-btn').addEventListener('click', function () {\r\n-            const extractedText = document.getElementById('ocr-extracted-text').textContent;\r\n-\r\n-            if (!extractedText || extractedText.includes('Extracted text will appear here')) {\r\n-                alert('No text to use. Please extract text from an image first.');\r\n-                return;\r\n-            }\r\n-\r\n-            document.getElementById('input-text').value = extractedText;\r\n-            document.getElementById('char-count').textContent = extractedText.length;\r\n-\r\n-            // Switch to text tab\r\n-            document.getElementById('text-tab').classList.add('tab-active');\r\n-            document.getElementById('image-tab').classList.remove('tab-active');\r\n-            document.getElementById('text-input-section').classList.remove('hidden');\r\n-            document.getElementById('image-ocr-section').classList.add('hidden');\r\n-\r\n-            // Auto-select the script based on OCR language\r\n-            const ocrLanguage = document.getElementById('ocr-language').value;\r\n-            const languageToScriptMap = {\r\n-                'hin': 'devanagari',\r\n-                'ben': 'bengali',\r\n-                'tam': 'tamil',\r\n-                'tel': 'telugu',\r\n-                'kan': 'kannada',\r\n-                'mal': 'malayalam',\r\n-                'guj': 'gujarati',\r\n-                'pan': 'gurmukhi',\r\n-                'ori': 'oriya',\r\n-                'eng': 'itrans'\r\n-            };\r\n-\r\n-            if (languageToScriptMap[ocrLanguage]) {\r\n-                document.getElementById('source-script').value = languageToScriptMap[ocrLanguage];\r\n-            }\r\n-        });\r\n-\r\n-        // Cancel OCR button\r\n-        document.getElementById('ocr-cancel-btn').addEventListener('click', function () {\r\n-            document.getElementById('ocr-image-upload').value = '';\r\n-            document.getElementById('image-preview').innerHTML = '<p class=\"text-gray-400 italic\">Image preview will appear here...</p>';\r\n-            document.getElementById('ocr-extracted-text').innerHTML = '<p class=\"text-gray-400 italic\">Extracted text will appear here...</p>';\r\n-            document.getElementById('ocr-progress').classList.add('hidden');\r\n-        });\r\n-\r\n-        // Helper function to get script name from code\r\n-        function getScriptName(code) {\r\n-            const scripts = {\r\n-                'devanagari': 'Hindi (Devanagari)',\r\n-                'bengali': 'Bengali',\r\n-                'tamil': 'Tamil',\r\n-                'telugu': 'Telugu',\r\n-                'kannada': 'Kannada',\r\n-                'malayalam': 'Malayalam',\r\n-                'gujarati': 'Gujarati',\r\n-                'gurmukhi': 'Punjabi (Gurmukhi)',\r\n-                'oriya': 'Odia',\r\n-                'itrans': 'English (Latin)',\r\n-                'auto': 'Auto Detect'\r\n-            };\r\n-            return scripts[code] || code;\r\n-        }\r\n-\r\n-        // Update script names when dropdowns change\r\n-        document.getElementById('source-script').addEventListener('change', function () {\r\n-            document.getElementById('source-script-name').textContent = getScriptName(this.value);\r\n-        });\r\n-\r\n-        document.getElementById('target-script').addEventListener('change', function () {\r\n-            document.getElementById('target-script-name').textContent = getScriptName(this.value);\r\n-        });\r\n-    </script>\r\n-</body>\r\n-\r\n-</html>\n\\ No newline at end of file\n+        // Enhanced transliteration mappings for better accuracy\r\n+        const enhancedTransliterationMaps = {\r\n+            'tamil-itrans': {\r\n+                'க்': 'k', 'க': 'ka', 'கா': 'kā', 'கி': 'ki', 'கீ': 'kī', 'கு': 'ku', 'கூ': 'kū', 'கெ': 'ke', 'கே': 'kē', 'கை': 'kai', 'கொ': 'ko', 'கோ': 'kō', 'கௌ': 'kau',\r\n+                'ங்': 'ṅ', 'ங': 'ṅa', 'ஙா': 'ṅā', 'ஙி': 'ṅi', 'ஙீ': 'ṅī', 'ஙு': 'ṅu', 'ஙூ': 'ṅū', 'ஙெ': 'ṅe', 'ஙே': 'ṅē', 'ஙை': 'ṅai', 'ஙொ': 'ṅo', 'ஙோ': 'ṅō', 'ஙௌ': 'ṅau',\r\n+                'ச்': 'c', 'ச': 'ca', 'சா': 'cā', 'சி': 'ci', 'சீ': 'cī', 'சு': 'cu', 'சூ': 'cū', 'செ': 'ce', 'சே': 'cē', 'சை': 'cai', 'சொ': 'co', 'சோ': 'cō', 'சௌ': 'cau',\r\n+                'ஞ்': 'ñ', 'ஞ': 'ña', 'ஞா': 'ñā', 'ஞி': 'ñi', 'ஞீ': 'ñī', 'ஞு': 'ñu', 'ஞூ': 'ñū', 'ஞெ': 'ñe', 'ஞே': 'ñē', 'ஞை': 'ñai', 'ஞொ': 'ño', 'ஞோ': 'ñō', 'ஞௌ': 'ñau',\r\n+                'ட்': 'ṭ', 'ட': 'ṭa', 'டா': 'ṭā', 'டி': 'ṭi', 'டீ': 'ṭī', 'டு': 'ṭu', 'டூ': 'ṭū', 'டெ': 'ṭe', 'டே': 'ṭē', 'டை': 'ṭai', 'டொ': 'ṭo', 'டோ': 'ṭō', 'டௌ': 'ṭau',\r\n+                'ண்': 'ṇ', 'ண': 'ṇa', 'ணா': 'ṇā', 'ணி': 'ṇi', 'ணீ': 'ṇī', 'ணு': 'ṇu', 'ணூ': 'ṇū', 'ணெ': 'ṇe', 'ணே': 'ṇē', 'ணை': 'ṇai', 'ணொ': 'ṇo', 'ணோ': 'ṇō', 'ணௌ': 'ṇau',\r\n+                'த்': 't', 'த': 'ta', 'தா': 'tā', 'தி': 'ti', 'தீ': 'tī', 'து': 'tu', 'தூ': 'tū', 'தெ': 'te', 'தே': 'tē', 'தை': 'tai', 'தொ': 'to', 'தோ': 'tō', 'தௌ': 'tau',\r\n+                'ந்': 'n', 'ந': 'na', 'நா': 'nā', 'நி': 'ni', 'நீ': 'nī', 'நு': 'nu', 'நூ': 'nū', 'நெ': 'ne', 'நே': 'nē', 'நை': 'nai', 'நொ': 'no', 'நோ': 'nō', 'நௌ': 'nau',\r\n+                'ப்': 'p', 'ப': 'pa', 'பா': 'pā', 'பி': 'pi', 'பீ': 'pī', 'பு': 'pu', 'பூ': 'pū', 'பெ': 'pe', 'பே': 'pē', 'பை': 'pai', 'பொ': 'po', 'போ': 'pō', 'பௌ': 'pau',\r\n+                'ம்': 'm', 'ம': 'ma', 'மா': 'mā', 'மி': 'mi', 'மீ': 'mī', 'மு': 'mu', 'மூ': 'mū', 'மெ': 'me', 'மே': 'mē', 'மை': 'mai', 'மொ': 'mo', 'மோ': 'mō', 'மௌ': 'mau',\r\n+                'ய்': 'y', 'ய': 'ya', 'யா': 'yā', 'யி': 'yi', 'யீ': 'yī', 'யு': 'yu', 'யூ': 'yū', 'யெ': 'ye', 'யே': 'yē', 'யை': 'yai', 'யொ': 'yo', 'யோ': 'yō', 'யௌ': 'yau',\r\n+                'ர்': 'r', 'ர': 'ra', 'ரா': 'rā', 'ரி': 'ri', 'ரீ': 'rī', 'ரு': 'ru', 'ரூ': 'rū', 'ரெ': 're', 'ரே': 'rē', 'ரை': 'rai', 'ரொ': 'ro', 'ரோ': 'rō', 'ரௌ': 'rau',\r\n+                'ல்': 'l', 'ல': 'la', 'லா': 'lā', 'லி': 'li', 'லீ': 'lī', 'லு': 'lu', 'லூ': 'lū', 'லெ': 'le', 'லே': 'lē', 'லை': 'lai', 'லொ': 'lo', 'லோ': 'lō', 'லௌ': 'lau',\r\n+                'வ்': 'v', 'வ': 'va', 'வா': 'vā', 'வி': 'vi', 'வீ': 'vī', 'வு': 'vu', 'வூ': 'vū', 'வெ': 've', 'வே': 'vē', 'வை': 'vai', 'வொ': 'vo', 'வோ': 'vō', 'வௌ': 'vau',\r\n+                'ழ்': 'ḻ', 'ழ': 'ḻa', 'ழா': 'ḻā', 'ழி': 'ḻi', 'ழீ': 'ḻī', 'ழு': 'ḻu', 'ழூ': 'ḻū', 'ழெ': 'ḻe', 'ழே': 'ḻē', 'ழை': 'ḻai', 'ழொ': 'ḻo', 'ழோ': 'ḻō', 'ழௌ': 'ḻau',\r\n+                'ள்': 'ḷ', 'ள': 'ḷa', 'ளா': '\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758299629567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,39 +180,39 @@\n             padding: 8px;\r\n             background-color: #f3f4f6;\r\n             border-radius: 4px;\r\n         }\r\n-\r\n+        \r\n         .accuracy-indicator {\r\n             display: inline-block;\r\n             padding: 2px 6px;\r\n             border-radius: 10px;\r\n             font-size: 0.75rem;\r\n             font-weight: 600;\r\n             margin-left: 5px;\r\n         }\r\n-\r\n+        \r\n         .high-accuracy {\r\n             background-color: #10B981;\r\n             color: white;\r\n         }\r\n-\r\n+        \r\n         .medium-accuracy {\r\n             background-color: #F59E0B;\r\n             color: white;\r\n         }\r\n-\r\n+        \r\n         .low-accuracy {\r\n             background-color: #EF4444;\r\n             color: white;\r\n         }\r\n-\r\n+        \r\n         .ocr-word-confidence {\r\n             font-size: 0.7rem;\r\n             color: #6B7280;\r\n             display: block;\r\n         }\r\n-\r\n+        \r\n         .pronunciation-hint {\r\n             font-size: 0.8rem;\r\n             color: #6B7280;\r\n             font-style: italic;\r\n@@ -376,18 +376,16 @@\n         <!-- Image OCR Section (Hidden by default) -->\r\n         <div id=\"image-ocr-section\" class=\"bg-white shadow rounded-lg overflow-hidden mt-8 hidden\" data-aos=\"fade-up\">\r\n             <div class=\"p-6\">\r\n                 <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Upload Image with Text</h3>\r\n-\r\n+                \r\n                 <!-- Camera Mode Toggle -->\r\n                 <div class=\"flex justify-center mb-4\">\r\n                     <div class=\"inline-flex rounded-md shadow-sm\" role=\"group\">\r\n-                        <button id=\"upload-mode-btn\" type=\"button\"\r\n-                            class=\"px-4 py-2 text-sm font-medium text-white bg-orange-600 border border-orange-600 rounded-l-lg hover:bg-orange-700 focus:z-10 focus:ring-2 focus:ring-orange-500\">\r\n+                        <button id=\"upload-mode-btn\" type=\"button\" class=\"px-4 py-2 text-sm font-medium text-white bg-orange-600 border border-orange-600 rounded-l-lg hover:bg-orange-700 focus:z-10 focus:ring-2 focus:ring-orange-500\">\r\n                             <i data-feather=\"upload\" class=\"w-4 h-4 inline mr-1\"></i> Upload\r\n                         </button>\r\n-                        <button id=\"camera-mode-btn\" type=\"button\"\r\n-                            class=\"px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-r-md hover:bg-gray-100 hover:text-orange-700 focus:z-10 focus:ring-2 focus:ring-orange-500\">\r\n+                        <button id=\"camera-mode-btn\" type=\"button\" class=\"px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-r-md hover:bg-gray-100 hover:text-orange-700 focus:z-10 focus:ring-2 focus:ring-orange-500\">\r\n                             <i data-feather=\"camera\" class=\"w-4 h-4 inline mr-1\"></i> Camera\r\n                         </button>\r\n                     </div>\r\n                 </div>\r\n@@ -468,24 +466,21 @@\n                             <p class=\"text-gray-400 italic\">Extracted text will appear here...</p>\r\n                         </div>\r\n                         <div class=\"ocr-action-bar\">\r\n                             <div>\r\n-                                <button id=\"ocr-select-text-btn\"\r\n-                                    class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n+                                <button id=\"ocr-select-text-btn\" class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n                                     <i data-feather=\"edit\" class=\"w-3 h-3 inline mr-1\"></i> Select Text\r\n                                 </button>\r\n-                                <button id=\"ocr-clear-selection-btn\"\r\n-                                    class=\"text-xs text-gray-600 hover:text-gray-800 hidden\">\r\n+                                <button id=\"ocr-clear-selection-btn\" class=\"text-xs text-gray-600 hover:text-gray-800 hidden\">\r\n                                     <i data-feather=\"x\" class=\"w-3 h-3 inline mr-1\"></i> Clear Selection\r\n                                 </button>\r\n                             </div>\r\n                             <div>\r\n                                 <button id=\"ocr-copy-btn\" class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n                                     <i data-feather=\"copy\" class=\"w-3 h-3 inline mr-1\"></i> Copy Text\r\n                                 </button>\r\n                                 <button id=\"ocr-use-btn\" class=\"text-xs text-orange-600 hover:text-orange-800\">\r\n-                                    <i data-feather=\"arrow-right\" class=\"w-3 h-3 inline mr-1\"></i> Use for\r\n-                                    Transliteration\r\n+                                    <i data-feather=\"arrow-right\" class=\"w-3 h-3 inline mr-1\"></i> Use for Transliteration\r\n                                 </button>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n@@ -671,5 +666,628 @@\n                 'ர்': 'r', 'ர': 'ra', 'ரா': 'rā', 'ரி': 'ri', 'ரீ': 'rī', 'ரு': 'ru', 'ரூ': 'rū', 'ரெ': 're', 'ரே': 'rē', 'ரை': 'rai', 'ரொ': 'ro', 'ரோ': 'rō', 'ரௌ': 'rau',\r\n                 'ல்': 'l', 'ல': 'la', 'லா': 'lā', 'லி': 'li', 'லீ': 'lī', 'லு': 'lu', 'லூ': 'lū', 'லெ': 'le', 'லே': 'lē', 'லை': 'lai', 'லொ': 'lo', 'லோ': 'lō', 'லௌ': 'lau',\r\n                 'வ்': 'v', 'வ': 'va', 'வா': 'vā', 'வி': 'vi', 'வீ': 'vī', 'வு': 'vu', 'வூ': 'vū', 'வெ': 've', 'வே': 'vē', 'வை': 'vai', 'வொ': 'vo', 'வோ': 'vō', 'வௌ': 'vau',\r\n                 'ழ்': 'ḻ', 'ழ': 'ḻa', 'ழா': 'ḻā', 'ழி': 'ḻi', 'ழீ': 'ḻī', 'ழு': 'ḻu', 'ழூ': 'ḻū', 'ழெ': 'ḻe', 'ழே': 'ḻē', 'ழை': 'ḻai', 'ழொ': 'ḻo', 'ழோ': 'ḻō', 'ழௌ': 'ḻau',\r\n-                'ள்': 'ḷ', 'ள': 'ḷa', 'ளா': '\n\\ No newline at end of file\n+                'ள்': 'ḷ', 'ள': 'ḷa', 'ளா': 'ள்': 'ḷ', 'ள': 'ḷa', 'ளா': 'ḷā', 'ளி': 'ḷi', 'ளீ': 'ḷī', 'ளு': 'ḷu', 'ளூ': 'ḷū', 'ளெ': 'ḷe', 'ளே': 'ḷē', 'ளை': 'ḷai', 'ளொ': 'ḷo', 'ளோ': 'ḷō', 'ளௌ': 'ḷau',\r\n+                'ற்': 'ṟ', 'ற': 'ṟa', 'றா': 'ṟā', 'றி': 'ṟi', 'றீ': 'ṟī', 'று': 'ṟu', 'றூ': 'ṟū', 'றெ': 'ṟe', 'றே': 'ṟē', 'றை': 'ṟai', 'றொ': 'ṟo', 'றோ': 'ṟō', 'றௌ': 'ṟau',\r\n+                'ன்': 'ṉ', 'ன': 'ṉa', 'னா': 'ṉā', 'னி': 'ṉi', 'னீ': 'ṉī', 'னு': 'ṉu', 'னூ': 'ṉū', 'னெ': 'ṉe', 'னே': 'ṉē', 'னை': 'ṉai', 'னொ': 'ṉo', 'னோ': 'ṉō', 'னௌ': 'ṉau',\r\n+                'அ': 'a', 'ஆ': 'ā', 'இ': 'i', 'ஈ': 'ī', 'உ': 'u', 'ஊ': 'ū', 'எ': 'e', 'ஏ': 'ē', 'ஐ': 'ai', 'ஒ': 'o', 'ஓ': 'ō', 'ஔ': 'au'\r\n+            },\r\n+            // Add similar enhanced mappings for other scripts\r\n+        };\r\n+\r\n+        // DOM elements\r\n+        const textTab = document.getElementById('text-tab');\r\n+        const imageTab = document.getElementById('image-tab');\r\n+        const textInputSection = document.getElementById('text-input-section');\r\n+        const imageOcrSection = document.getElementById('image-ocr-section');\r\n+        const inputText = document.getElementById('input-text');\r\n+        const outputText = document.getElementById('output-text');\r\n+        const sourceScript = document.getElementById('source-script');\r\n+        const targetScript = document.getElementById('target-script');\r\n+        const transliterateBtn = document.getElementById('transliterate-btn');\r\n+        const charCount = document.getElementById('char-count');\r\n+        const copyBtn = document.getElementById('copy-btn');\r\n+        const speakBtn = document.getElementById('speak-btn');\r\n+        const downloadBtn = document.getElementById('download-btn');\r\n+        const speechInputBtn = document.getElementById('speech-input-btn');\r\n+        const pronunciationHints = document.getElementById('pronunciation-hints');\r\n+        const outputPronunciation = document.getElementById('output-pronunciation');\r\n+        const sourceScriptName = document.getElementById('source-script-name');\r\n+        const targetScriptName = document.getElementById('target-script-name');\r\n+        \r\n+        // OCR elements\r\n+        const uploadModeBtn = document.getElementById('upload-mode-btn');\r\n+        const cameraModeBtn = document.getElementById('camera-mode-btn');\r\n+        const uploadSection = document.getElementById('upload-section');\r\n+        const cameraSection = document.getElementById('camera-section');\r\n+        const ocrImageUpload = document.getElementById('ocr-image-upload');\r\n+        const imagePreview = document.getElementById('image-preview');\r\n+        const ocrExtractedText = document.getElementById('ocr-extracted-text');\r\n+        const ocrLanguage = document.getElementById('ocr-language');\r\n+        const ocrProcessBtn = document.getElementById('ocr-process-btn');\r\n+        const ocrLoader = document.getElementById('ocr-loader');\r\n+        const ocrBtnText = document.getElementById('ocr-btn-text');\r\n+        const ocrProgress = document.getElementById('ocr-progress');\r\n+        const ocrProgressBar = document.getElementById('ocr-progress-bar');\r\n+        const ocrProgressStatus = document.getElementById('ocr-progress-status');\r\n+        const ocrProgressPercentage = document.getElementById('ocr-progress-percentage');\r\n+        const ocrCancelBtn = document.getElementById('ocr-cancel-btn');\r\n+        const ocrCopyBtn = document.getElementById('ocr-copy-btn');\r\n+        const ocrUseBtn = document.getElementById('ocr-use-btn');\r\n+        const detectedLanguage = document.getElementById('detected-language');\r\n+        const ocrSelectTextBtn = document.getElementById('ocr-select-text-btn');\r\n+        const ocrClearSelectionBtn = document.getElementById('ocr-clear-selection-btn');\r\n+        \r\n+        // Camera elements\r\n+        const cameraVideo = document.getElementById('camera-video');\r\n+        const captureBtn = document.getElementById('capture-btn');\r\n+        const switchCameraBtn = document.getElementById('switch-camera-btn');\r\n+        const captureCanvas = document.getElementById('capture-canvas');\r\n+        const ocrSelectionOverlay = document.querySelector('.ocr-selection-overlay');\r\n+\r\n+        // State variables\r\n+        let currentStream = null;\r\n+        let cameras = [];\r\n+        let currentCameraIndex = 0;\r\n+        let isTextSelectionMode = false;\r\n+        let selectedWords = new Set();\r\n+        let recognition = null;\r\n+\r\n+        // Tab switching\r\n+        textTab.addEventListener('click', () => {\r\n+            textTab.classList.add('tab-active');\r\n+            imageTab.classList.remove('tab-active');\r\n+            textInputSection.classList.remove('hidden');\r\n+            imageOcrSection.classList.add('hidden');\r\n+        });\r\n+\r\n+        imageTab.addEventListener('click', () => {\r\n+            imageTab.classList.add('tab-active');\r\n+            textTab.classList.remove('tab-active');\r\n+            imageOcrSection.classList.remove('hidden');\r\n+            textInputSection.classList.add('hidden');\r\n+        });\r\n+\r\n+        // Character count\r\n+        inputText.addEventListener('input', () => {\r\n+            charCount.textContent = inputText.value.length;\r\n+        });\r\n+\r\n+        // Script information update\r\n+        sourceScript.addEventListener('change', updateScriptInfo);\r\n+        targetScript.addEventListener('change', updateScriptInfo);\r\n+\r\n+        function updateScriptInfo() {\r\n+            sourceScriptName.textContent = sourceScript.options[sourceScript.selectedIndex].text;\r\n+            targetScriptName.textContent = targetScript.options[targetScript.selectedIndex].text;\r\n+        }\r\n+\r\n+        // Enhanced transliteration function\r\n+        function enhancedTransliterate(text, fromScript, toScript) {\r\n+            // Use the enhanced mappings if available\r\n+            if (fromScript === 'tamil' && toScript === 'itrans') {\r\n+                return transliterateUsingMapping(text, enhancedTransliterationMaps['tamil-itrans']);\r\n+            }\r\n+            \r\n+            // Fallback to Sanscript for other conversions\r\n+            try {\r\n+                return Sanscript.t(text, fromScript, toScript);\r\n+            } catch (error) {\r\n+                console.error('Transliteration error:', error);\r\n+                return text;\r\n+            }\r\n+        }\r\n+\r\n+        function transliterateUsingMapping(text, mapping) {\r\n+            let result = '';\r\n+            let i = 0;\r\n+            \r\n+            while (i < text.length) {\r\n+                let found = false;\r\n+                \r\n+                // Check for multi-character sequences first (longest match)\r\n+                for (let len = 4; len >= 1; len--) {\r\n+                    if (i + len <= text.length) {\r\n+                        const segment = text.substr(i, len);\r\n+                        if (mapping[segment]) {\r\n+                            result += mapping[segment];\r\n+                            i += len;\r\n+                            found = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                }\r\n+                \r\n+                if (!found) {\r\n+                    // If no mapping found, keep the original character\r\n+                    result += text[i];\r\n+                    i++;\r\n+                }\r\n+            }\r\n+            \r\n+            return result;\r\n+        }\r\n+\r\n+        // Transliteration handler\r\n+        transliterateBtn.addEventListener('click', () => {\r\n+            const text = inputText.value;\r\n+            const fromScript = sourceScript.value;\r\n+            const toScript = targetScript.value;\r\n+            \r\n+            if (!text.trim()) {\r\n+                outputText.innerHTML = '<p class=\"text-gray-400 italic\">Please enter some text to transliterate</p>';\r\n+                return;\r\n+            }\r\n+            \r\n+            const result = enhancedTransliterate(text, fromScript, toScript);\r\n+            outputText.textContent = result;\r\n+            \r\n+            // Show pronunciation guide for Latin output\r\n+            if (toScript === 'itrans') {\r\n+                showPronunciationGuide(result);\r\n+            } else {\r\n+                outputPronunciation.classList.add('hidden');\r\n+            }\r\n+        });\r\n+\r\n+        function showPronunciationGuide(text) {\r\n+            const guide = document.createElement('div');\r\n+            guide.innerHTML = `\r\n+                <p class=\"text-sm font-medium mb-2\">Pronunciation Guide:</p>\r\n+                <p class=\"text-xs\">ā = aa, ī = ee, ū = oo, ṛ = ri, ṝ = rri, ḷ = lri, ḹ = lree</p>\r\n+                <p class=\"text-xs mt-1\">ś = sh, ṣ = sh (retroflex), ñ = nya, ṅ = ng</p>\r\n+            `;\r\n+            outputPronunciation.innerHTML = '';\r\n+            outputPronunciation.appendChild(guide);\r\n+            outputPronunciation.classList.remove('hidden');\r\n+        }\r\n+\r\n+        // Copy, speak, download functionality\r\n+        copyBtn.addEventListener('click', () => {\r\n+            const text = outputText.textContent;\r\n+            if (text && text !== 'Transliterated text will appear here...') {\r\n+                navigator.clipboard.writeText(text).then(() => {\r\n+                    const originalHtml = copyBtn.innerHTML;\r\n+                    copyBtn.innerHTML = '<i data-feather=\"check\" class=\"w-4 h-4 mr-1\"></i> Copied!';\r\n+                    setTimeout(() => {\r\n+                        copyBtn.innerHTML = originalHtml;\r\n+                        feather.replace();\r\n+                    }, 2000);\r\n+                });\r\n+            }\r\n+        });\r\n+\r\n+        speakBtn.addEventListener('click', () => {\r\n+            const text = outputText.textContent;\r\n+            if (text && text !== 'Transliterated text will appear here...') {\r\n+                const utterance = new SpeechSynthesisUtterance(text);\r\n+                \r\n+                // Set appropriate language based on target script\r\n+                const langMap = {\r\n+                    'itrans': 'en-IN',\r\n+                    'devanagari': 'hi-IN',\r\n+                    'bengali': 'bn-IN',\r\n+                    'tamil': 'ta-IN',\r\n+                    'telugu': 'te-IN',\r\n+                    'kannada': 'kn-IN',\r\n+                    'malayalam': 'ml-IN',\r\n+                    'gujarati': 'gu-IN',\r\n+                    'gurmukhi': 'pa-IN',\r\n+                    'oriya': 'or-IN'\r\n+                };\r\n+                \r\n+                utterance.lang = langMap[targetScript.value] || 'en-US';\r\n+                speechSynthesis.speak(utterance);\r\n+            }\r\n+        });\r\n+\r\n+        downloadBtn.addEventListener('click', () => {\r\n+            const text = outputText.textContent;\r\n+            if (text && text !== 'Transliterated text will appear here...') {\r\n+                const blob = new Blob([text], { type: 'text/plain' });\r\n+                const url = URL.createObjectURL(blob);\r\n+                const a = document.createElement('a');\r\n+                a.href = url;\r\n+                a.download = `transliterated-text-${new Date().getTime()}.txt`;\r\n+                document.body.appendChild(a);\r\n+                a.click();\r\n+                document.body.removeChild(a);\r\n+                URL.revokeObjectURL(url);\r\n+            }\r\n+        });\r\n+\r\n+        // Speech input\r\n+        speechInputBtn.addEventListener('click', () => {\r\n+            if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n+                alert('Speech recognition is not supported in this browser.');\r\n+                return;\r\n+            }\r\n+            \r\n+            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n+            recognition = new SpeechRecognition();\r\n+            recognition.continuous = false;\r\n+            recognition.interimResults = false;\r\n+            \r\n+            // Set language based on source script\r\n+            const langMap = {\r\n+                'devanagari': 'hi-IN',\r\n+                'bengali': 'bn-IN',\r\n+                'tamil': 'ta-IN',\r\n+                'telugu': 'te-IN',\r\n+                'kannada': 'kn-IN',\r\n+                'malayalam': 'ml-IN',\r\n+                'gujarati': 'gu-IN',\r\n+                'gurmukhi': 'pa-IN',\r\n+                'oriya': 'or-IN',\r\n+                'itrans': 'en-IN'\r\n+            };\r\n+            \r\n+            recognition.lang = langMap[sourceScript.value] || 'en-US';\r\n+            \r\n+            recognition.onstart = () => {\r\n+                speechInputBtn.innerHTML = '<i data-feather=\"mic-off\" class=\"w-4 h-4 inline mr-1\"></i> Listening...';\r\n+                speechInputBtn.classList.add('text-red-600');\r\n+                feather.replace();\r\n+            };\r\n+            \r\n+            recognition.onresult = (event) => {\r\n+                const transcript = event.results[0][0].transcript;\r\n+                inputText.value = transcript;\r\n+                charCount.textContent = transcript.length;\r\n+                \r\n+                // Auto-transliterate if text is long enough\r\n+                if (transcript.length > 3) {\r\n+                    transliterateBtn.click();\r\n+                }\r\n+            };\r\n+            \r\n+            recognition.onend = () => {\r\n+                speechInputBtn.innerHTML = '<i data-feather=\"mic\" class=\"w-4 h-4 inline mr-1\"></i> Speech Input';\r\n+                speechInputBtn.classList.remove('text-red-600');\r\n+                feather.replace();\r\n+            };\r\n+            \r\n+            recognition.onerror = (event) => {\r\n+                console.error('Speech recognition error:', event.error);\r\n+                speechInputBtn.innerHTML = '<i data-feather=\"mic\" class=\"w-4 h-4 inline mr-1\"></i> Speech Input';\r\n+                speechInputBtn.classList.remove('text-red-600');\r\n+                feather.replace();\r\n+                \r\n+                if (event.error === 'not-allowed') {\r\n+                    alert('Microphone access is not allowed. Please enable microphone permissions in your browser settings.');\r\n+                }\r\n+            };\r\n+            \r\n+            recognition.start();\r\n+        });\r\n+\r\n+        // Camera mode switching\r\n+        uploadModeBtn.addEventListener('click', () => {\r\n+            uploadModeBtn.classList.add('bg-orange-600', 'text-white');\r\n+            cameraModeBtn.classList.remove('bg-orange-600', 'text-white');\r\n+            uploadModeBtn.classList.remove('bg-white', 'text-gray-900');\r\n+            cameraModeBtn.classList.add('bg-white', 'text-gray-900');\r\n+            uploadSection.classList.remove('hidden');\r\n+            cameraSection.classList.add('hidden');\r\n+            stopCamera();\r\n+        });\r\n+\r\n+        cameraModeBtn.addEventListener('click', () => {\r\n+            cameraModeBtn.classList.add('bg-orange-600', 'text-white');\r\n+            uploadModeBtn.classList.remove('bg-orange-600', 'text-white');\r\n+            cameraModeBtn.classList.remove('bg-white', 'text-gray-900');\r\n+            uploadModeBtn.classList.add('bg-white', 'text-gray-900');\r\n+            cameraSection.classList.remove('hidden');\r\n+            uploadSection.classList.add('hidden');\r\n+            initCamera();\r\n+        });\r\n+\r\n+        // Image upload handling\r\n+        ocrImageUpload.addEventListener('change', (e) => {\r\n+            const file = e.target.files[0];\r\n+            if (file) {\r\n+                const reader = new FileReader();\r\n+                reader.onload = (event) => {\r\n+                    const img = new Image();\r\n+                    img.src = event.target.result;\r\n+                    img.onload = () => {\r\n+                        imagePreview.innerHTML = '';\r\n+                        const displayImg = img.cloneNode();\r\n+                        displayImg.style.maxWidth = '100%';\r\n+                        displayImg.style.maxHeight = '300px';\r\n+                        imagePreview.appendChild(displayImg);\r\n+                    };\r\n+                };\r\n+                reader.readAsDataURL(file);\r\n+            }\r\n+        });\r\n+\r\n+        // Camera initialization\r\n+        async function initCamera() {\r\n+            try {\r\n+                stopCamera(); // Stop any existing stream\r\n+                \r\n+                // Get available cameras\r\n+                const devices = await navigator.mediaDevices.enumerateDevices();\r\n+                cameras = devices.filter(device => device.kind === 'videoinput');\r\n+                \r\n+                if (cameras.length === 0) {\r\n+                    alert('No camera found on this device.');\r\n+                    return;\r\n+                }\r\n+                \r\n+                const constraints = {\r\n+                    video: {\r\n+                        deviceId: cameras[currentCameraIndex].deviceId ? \r\n+                                 { exact: cameras[currentCameraIndex].deviceId } : undefined,\r\n+                        width: { ideal: 1280 },\r\n+                        height: { ideal: 720 }\r\n+                    }\r\n+                };\r\n+                \r\n+                currentStream = await navigator.mediaDevices.getUserMedia(constraints);\r\n+                cameraVideo.srcObject = currentStream;\r\n+                \r\n+            } catch (error) {\r\n+                console.error('Error accessing camera:', error);\r\n+                alert('Could not access camera: ' + error.message);\r\n+            }\r\n+        }\r\n+\r\n+        function stopCamera() {\r\n+            if (currentStream) {\r\n+                currentStream.getTracks().forEach(track => track.stop());\r\n+                currentStream = null;\r\n+                cameraVideo.srcObject = null;\r\n+            }\r\n+        }\r\n+\r\n+        // Switch camera\r\n+        switchCameraBtn.addEventListener('click', () => {\r\n+            if (cameras.length > 1) {\r\n+                currentCameraIndex = (currentCameraIndex + 1) % cameras.length;\r\n+                initCamera();\r\n+            }\r\n+        });\r\n+\r\n+        // Capture image\r\n+        captureBtn.addEventListener('click', () => {\r\n+            const context = captureCanvas.getContext('2d');\r\n+            captureCanvas.width = cameraVideo.videoWidth;\r\n+            captureCanvas.height = cameraVideo.videoHeight;\r\n+            context.drawImage(cameraVideo, 0, 0, captureCanvas.width, captureCanvas.height);\r\n+            \r\n+            // Display the captured image\r\n+            const dataUrl = captureCanvas.toDataURL('image/png');\r\n+            imagePreview.innerHTML = '';\r\n+            const img = new Image();\r\n+            img.src = dataUrl;\r\n+            img.style.maxWidth = '100%';\r\n+            img.style.maxHeight = '300px';\r\n+            imagePreview.appendChild(img);\r\n+            \r\n+            // Stop camera after capture\r\n+            stopCamera();\r\n+        });\r\n+\r\n+        // OCR processing\r\n+        ocrProcessBtn.addEventListener('click', async () => {\r\n+            let imageSrc;\r\n+            \r\n+            // Get image from either upload or camera\r\n+            if (uploadSection.classList.contains('hidden')) {\r\n+                // Camera mode\r\n+                if (captureCanvas.width === 0) {\r\n+                    alert('Please capture an image first.');\r\n+                    return;\r\n+                }\r\n+                imageSrc = captureCanvas.toDataURL('image/png');\r\n+            } else {\r\n+                // Upload mode\r\n+                if (!ocrImageUpload.files[0]) {\r\n+                    alert('Please upload an image first.');\r\n+                    return;\r\n+                }\r\n+                const file = ocrImageUpload.files[0];\r\n+                imageSrc = await readFileAsDataURL(file);\r\n+            }\r\n+            \r\n+            // Get selected language\r\n+            const lang = ocrLanguage.value;\r\n+            \r\n+            // Show progress\r\n+            ocrProgress.classList.remove('hidden');\r\n+            ocrLoader.classList.remove('hidden');\r\n+            ocrBtnText.textContent = 'Processing...';\r\n+            ocrProcessBtn.disabled = true;\r\n+            \r\n+            try {\r\n+                const result = await performOCR(imageSrc, lang);\r\n+                displayOCRResult(result);\r\n+            } catch (error) {\r\n+                console.error('OCR Error:', error);\r\n+                ocrExtractedText.innerHTML = `<p class=\"text-red-500\">Error: ${error.message}</p>`;\r\n+            } finally {\r\n+                ocrLoader.classList.add('hidden');\r\n+                ocrBtnText.textContent = 'Extract Text';\r\n+                ocrProcessBtn.disabled = false;\r\n+            }\r\n+        });\r\n+\r\n+        function readFileAsDataURL(file) {\r\n+            return new Promise((resolve, reject) => {\r\n+                const reader = new FileReader();\r\n+                reader.onload = (e) => resolve(e.target.result);\r\n+                reader.onerror = (e) => reject(e);\r\n+                reader.readAsDataURL(file);\r\n+            });\r\n+        }\r\n+\r\n+        async function performOCR(imageData, lang) {\r\n+            return new Promise((resolve, reject) => {\r\n+                Tesseract.recognize(\r\n+                    imageData,\r\n+                    lang === 'auto' ? 'eng+hin+ben+tam+tel+kan+mal+guj+pan+ori' : lang,\r\n+                    {\r\n+                        logger: progress => {\r\n+                            if (progress.status === 'recognizing text') {\r\n+                                const progressPct = Math.round(progress.progress * 100);\r\n+                                ocrProgressBar.style.width = `${progressPct}%`;\r\n+                                ocrProgressPercentage.textContent = `${progressPct}%`;\r\n+                                ocrProgressStatus.textContent = 'Recognizing text...';\r\n+                            } else {\r\n+                                ocrProgressStatus.textContent = progress.status;\r\n+                            }\r\n+                        }\r\n+                    }\r\n+                ).then(result => {\r\n+                    resolve(result);\r\n+                }).catch(error => {\r\n+                    reject(error);\r\n+                });\r\n+            });\r\n+        }\r\n+\r\n+        function displayOCRResult(result) {\r\n+            // Hide progress bar\r\n+            ocrProgress.classList.add('hidden');\r\n+            \r\n+            // Show detected language if auto-detection was used\r\n+            if (ocrLanguage.value === 'auto' && result.data.language) {\r\n+                detectedLanguage.textContent = `Detected: ${result.data.language}`;\r\n+                detectedLanguage.classList.remove('hidden');\r\n+            }\r\n+            \r\n+            // Display the text with confidence indicators\r\n+            let html = '';\r\n+            \r\n+            if (result.data.words && result.data.words.length > 0) {\r\n+                result.data.words.forEach(word => {\r\n+                    const confidence = word.confidence;\r\n+                    let accuracyClass = 'low-accuracy';\r\n+                    \r\n+                    if (confidence > 85) accuracyClass = 'high-accuracy';\r\n+                    else if (confidence > 70) accuracyClass = 'medium-accuracy';\r\n+                    \r\n+                    html += `\r\n+                        <span class=\"word-box\" data-word=\"${word.text}\" data-confidence=\"${confidence}\">\r\n+                            ${word.text}\r\n+                            <span class=\"accuracy-indicator ${accuracyClass}\">${Math.round(confidence)}%</span>\r\n+                        </span>\r\n+                    `;\r\n+                });\r\n+            } else {\r\n+                html = '<p class=\"text-gray-400 italic\">No text could be detected in the image.</p>';\r\n+            }\r\n+            \r\n+            ocrExtractedText.innerHTML = html;\r\n+            \r\n+            // Add click handlers for word selection\r\n+            document.querySelectorAll('.word-box').forEach(box => {\r\n+                box.addEventListener('click', () => {\r\n+                    if (isTextSelectionMode) {\r\n+                        box.classList.toggle('selected');\r\n+                        const word = box.getAttribute('data-word');\r\n+                        if (box.classList.contains('selected')) {\r\n+                            selectedWords.add(word);\r\n+                        } else {\r\n+                            selectedWords.delete(word);\r\n+                        }\r\n+                    }\r\n+                });\r\n+            });\r\n+        }\r\n+\r\n+        // Text selection mode\r\n+        ocrSelectTextBtn.addEventListener('click', () => {\r\n+            isTextSelectionMode = true;\r\n+            ocrExtractedText.classList.add('text-selection-mode');\r\n+            ocrSelectTextBtn.classList.add('hidden');\r\n+            ocrClearSelectionBtn.classList.remove('hidden');\r\n+        });\r\n+\r\n+        ocrClearSelectionBtn.addEventListener('click', () => {\r\n+            isTextSelectionMode = false;\r\n+            selectedWords.clear();\r\n+            ocrExtractedText.classList.remove('text-selection-mode');\r\n+            ocrSelectTextBtn.classList.remove('hidden');\r\n+            ocrClearSelectionBtn.classList.add('hidden');\r\n+            document.querySelectorAll('.word-box.selected').forEach(box => {\r\n+                box.classList.remove('selected');\r\n+            });\r\n+        });\r\n+\r\n+        // Copy OCR text\r\n+        ocrCopyBtn.addEventListener('click', () => {\r\n+            let textToCopy;\r\n+            \r\n+            if (isTextSelectionMode && selectedWords.size > 0) {\r\n+                textToCopy = Array.from(selectedWords).join(' ');\r\n+            } else {\r\n+                textToCopy = Array.from(ocrExtractedText.querySelectorAll('.word-box'))\r\n+                    .map(box => box.getAttribute('data-word'))\r\n+                    .join(' ');\r\n+            }\r\n+            \r\n+            if (textToCopy.trim()) {\r\n+                navigator.clipboard.writeText(textToCopy).then(() => {\r\n+                    const originalHtml = ocrCopyBtn.innerHTML;\r\n+                    ocrCopyBtn.innerHTML = '<i data-feather=\"check\" class=\"w-3 h-3 inline mr-1\"></i> Copied!';\r\n+                    setTimeout(() => {\r\n+                        ocrCopyBtn.innerHTML = originalHtml;\r\n+                        feather.replace();\r\n+                    }, 2000);\r\n+                });\r\n+            }\r\n+        });\r\n+\r\n+        // Use OCR text for transliteration\r\n+        ocrUseBtn.addEventListener('click', () => {\r\n+            let textToUse;\r\n+            \r\n+            if (isTextSelectionMode && selectedWords.size > 0) {\r\n+                textToUse = Array.from(selectedWords).join(' ');\r\n+            } else {\r\n+                textToUse = Array.from(ocrExtractedText.querySelectorAll('.word-box'))\r\n+                    .map(box => box.getAttribute('data-word'))\r\n+                    .join(' ');\r\n+            }\r\n+            \r\n+            if (textToUse.trim()) {\r\n+                inputText.value = textToUse;\r\n+                charCount.textContent = textToUse.length;\r\n+                \r\n+                // Switch to text tab and trigger transliteration\r\n+                textTab.click();\r\n+                setTimeout(() => transliterateBtn.click(), 100);\r\n+            }\r\n+        });\r\n+\r\n+        // Clear OCR\r\n+        ocrCancelBtn.addEventListener('click', () => {\r\n+            imagePreview.innerHTML = '<p class=\"text-gray-400 italic\">Image preview will appear here...</p>';\r\n+            ocrExtractedText.innerHTML = '<p class=\"text-gray-400 italic\">Extracted text will appear here...</p>';\r\n+            ocrImageUpload.value = '';\r\n+            detectedLanguage.classList.add('hidden');\r\n+            stopCamera();\r\n+            \r\n+            // Reset camera section if needed\r\n+            if (!cameraSection.classList.contains('hidden')) {\r\n+                initCamera();\r\n+            }\r\n+        });\r\n+\r\n+        // Initialize\r\n+        updateScriptInfo();\r\n+        feather.replace();\r\n+\r\n+        // Clean up on page unload\r\n+        window.addEventListener('beforeunload', () => {\r\n+            stopCamera();\r\n+            if (recognition) {\r\n+                recognition.stop();\r\n+            }\r\n+        });\r\n+    </script>\r\n+</body>\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758299751946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,30 +654,32 @@\n             once: true\r\n         });\r\n \r\n         // Enhanced transliteration mappings for better accuracy\r\n-        const enhancedTransliterationMaps = {\r\n-            'tamil-itrans': {\r\n-                'க்': 'k', 'க': 'ka', 'கா': 'kā', 'கி': 'ki', 'கீ': 'kī', 'கு': 'ku', 'கூ': 'kū', 'கெ': 'ke', 'கே': 'kē', 'கை': 'kai', 'கொ': 'ko', 'கோ': 'kō', 'கௌ': 'kau',\r\n-                'ங்': 'ṅ', 'ங': 'ṅa', 'ஙா': 'ṅā', 'ஙி': 'ṅi', 'ஙீ': 'ṅī', 'ஙு': 'ṅu', 'ஙூ': 'ṅū', 'ஙெ': 'ṅe', 'ஙே': 'ṅē', 'ஙை': 'ṅai', 'ஙொ': 'ṅo', 'ஙோ': 'ṅō', 'ஙௌ': 'ṅau',\r\n-                'ச்': 'c', 'ச': 'ca', 'சா': 'cā', 'சி': 'ci', 'சீ': 'cī', 'சு': 'cu', 'சூ': 'cū', 'செ': 'ce', 'சே': 'cē', 'சை': 'cai', 'சொ': 'co', 'சோ': 'cō', 'சௌ': 'cau',\r\n-                'ஞ்': 'ñ', 'ஞ': 'ña', 'ஞா': 'ñā', 'ஞி': 'ñi', 'ஞீ': 'ñī', 'ஞு': 'ñu', 'ஞூ': 'ñū', 'ஞெ': 'ñe', 'ஞே': 'ñē', 'ஞை': 'ñai', 'ஞொ': 'ño', 'ஞோ': 'ñō', 'ஞௌ': 'ñau',\r\n-                'ட்': 'ṭ', 'ட': 'ṭa', 'டா': 'ṭā', 'டி': 'ṭi', 'டீ': 'ṭī', 'டு': 'ṭu', 'டூ': 'ṭū', 'டெ': 'ṭe', 'டே': 'ṭē', 'டை': 'ṭai', 'டொ': 'ṭo', 'டோ': 'ṭō', 'டௌ': 'ṭau',\r\n-                'ண்': 'ṇ', 'ண': 'ṇa', 'ணா': 'ṇā', 'ணி': 'ṇi', 'ணீ': 'ṇī', 'ணு': 'ṇu', 'ணூ': 'ṇū', 'ணெ': 'ṇe', 'ணே': 'ṇē', 'ணை': 'ṇai', 'ணொ': 'ṇo', 'ணோ': 'ṇō', 'ணௌ': 'ṇau',\r\n-                'த்': 't', 'த': 'ta', 'தா': 'tā', 'தி': 'ti', 'தீ': 'tī', 'து': 'tu', 'தூ': 'tū', 'தெ': 'te', 'தே': 'tē', 'தை': 'tai', 'தொ': 'to', 'தோ': 'tō', 'தௌ': 'tau',\r\n-                'ந்': 'n', 'ந': 'na', 'நா': 'nā', 'நி': 'ni', 'நீ': 'nī', 'நு': 'nu', 'நூ': 'nū', 'நெ': 'ne', 'நே': 'nē', 'நை': 'nai', 'நொ': 'no', 'நோ': 'nō', 'நௌ': 'nau',\r\n-                'ப்': 'p', 'ப': 'pa', 'பா': 'pā', 'பி': 'pi', 'பீ': 'pī', 'பு': 'pu', 'பூ': 'pū', 'பெ': 'pe', 'பே': 'pē', 'பை': 'pai', 'பொ': 'po', 'போ': 'pō', 'பௌ': 'pau',\r\n-                'ம்': 'm', 'ம': 'ma', 'மா': 'mā', 'மி': 'mi', 'மீ': 'mī', 'மு': 'mu', 'மூ': 'mū', 'மெ': 'me', 'மே': 'mē', 'மை': 'mai', 'மொ': 'mo', 'மோ': 'mō', 'மௌ': 'mau',\r\n-                'ய்': 'y', 'ய': 'ya', 'யா': 'yā', 'யி': 'yi', 'யீ': 'yī', 'யு': 'yu', 'யூ': 'yū', 'யெ': 'ye', 'யே': 'yē', 'யை': 'yai', 'யொ': 'yo', 'யோ': 'yō', 'யௌ': 'yau',\r\n-                'ர்': 'r', 'ர': 'ra', 'ரா': 'rā', 'ரி': 'ri', 'ரீ': 'rī', 'ரு': 'ru', 'ரூ': 'rū', 'ரெ': 're', 'ரே': 'rē', 'ரை': 'rai', 'ரொ': 'ro', 'ரோ': 'rō', 'ரௌ': 'rau',\r\n-                'ல்': 'l', 'ல': 'la', 'லா': 'lā', 'லி': 'li', 'லீ': 'lī', 'லு': 'lu', 'லூ': 'lū', 'லெ': 'le', 'லே': 'lē', 'லை': 'lai', 'லொ': 'lo', 'லோ': 'lō', 'லௌ': 'lau',\r\n-                'வ்': 'v', 'வ': 'va', 'வா': 'vā', 'வி': 'vi', 'வீ': 'vī', 'வு': 'vu', 'வூ': 'vū', 'வெ': 've', 'வே': 'vē', 'வை': 'vai', 'வொ': 'vo', 'வோ': 'vō', 'வௌ': 'vau',\r\n-                'ழ்': 'ḻ', 'ழ': 'ḻa', 'ழா': 'ḻā', 'ழி': 'ḻi', 'ழீ': 'ḻī', 'ழு': 'ḻu', 'ழூ': 'ḻū', 'ழெ': 'ḻe', 'ழே': 'ḻē', 'ழை': 'ḻai', 'ழொ': 'ḻo', 'ழோ': 'ḻō', 'ழௌ': 'ḻau',\r\n-                'ள்': 'ḷ', 'ள': 'ḷa', 'ளா': 'ள்': 'ḷ', 'ள': 'ḷa', 'ளா': 'ḷā', 'ளி': 'ḷi', 'ளீ': 'ḷī', 'ளு': 'ḷu', 'ளூ': 'ḷū', 'ளெ': 'ḷe', 'ளே': 'ḷē', 'ளை': 'ḷai', 'ளொ': 'ḷo', 'ளோ': 'ḷō', 'ளௌ': 'ḷau',\r\n-                'ற்': 'ṟ', 'ற': 'ṟa', 'றா': 'ṟā', 'றி': 'ṟi', 'றீ': 'ṟī', 'று': 'ṟu', 'றூ': 'ṟū', 'றெ': 'ṟe', 'றே': 'ṟē', 'றை': 'ṟai', 'றொ': 'ṟo', 'றோ': 'ṟō', 'றௌ': 'ṟau',\r\n-                'ன்': 'ṉ', 'ன': 'ṉa', 'னா': 'ṉā', 'னி': 'ṉi', 'னீ': 'ṉī', 'னு': 'ṉu', 'னூ': 'ṉū', 'னெ': 'ṉe', 'னே': 'ṉē', 'னை': 'ṉai', 'னொ': 'ṉo', 'னோ': 'ṉō', 'னௌ': 'ṉau',\r\n-                'அ': 'a', 'ஆ': 'ā', 'இ': 'i', 'ஈ': 'ī', 'உ': 'u', 'ஊ': 'ū', 'எ': 'e', 'ஏ': 'ē', 'ஐ': 'ai', 'ஒ': 'o', 'ஓ': 'ō', 'ஔ': 'au'\r\n-            },\r\n+       const enhancedTransliterationMaps = {\r\n+    'tamil-itrans': {\r\n+        'க்': 'k', 'க': 'ka', 'கா': 'kā', 'கி': 'ki', 'கீ': 'kī', 'கு': 'ku', 'கூ': 'kū', 'கெ': 'ke', 'கே': 'kē', 'கை': 'kai', 'கொ': 'ko', 'கோ': 'kō', 'கௌ': 'kau',\r\n+        'ங்': 'ṅ', 'ங': 'ṅa', 'ஙா': 'ṅā', 'ஙி': 'ṅi', 'ஙீ': 'ṅī', 'ஙு': 'ṅu', 'ஙூ': 'ṅū', 'ஙெ': 'ṅe', 'ஙே': 'ṅē', 'ஙை': 'ṅai', 'ஙொ': 'ṅo', 'ஙோ': 'ṅō', 'ஙௌ': 'ṅau',\r\n+        'ச்': 'c', 'ச': 'ca', 'சா': 'cā', 'சி': 'ci', 'சீ': 'cī', 'சு': 'cu', 'சூ': 'cū', 'செ': 'ce', 'சே': 'cē', 'சை': 'cai', 'சொ': 'co', 'சோ': 'cō', 'சௌ': 'cau',\r\n+        'ஞ்': 'ñ', 'ஞ': 'ña', 'ஞா': 'ñā', 'ஞி': 'ñi', 'ஞீ': 'ñī', 'ஞு': 'ñu', 'ஞூ': 'ñū', 'ஞெ': 'ñe', 'ஞே': 'ñē', 'ஞை': 'ñai', 'ஞொ': 'ño', 'ஞோ': 'ñō', 'ஞௌ': 'ñau',\r\n+        'ட்': 'ṭ', 'ட': 'ṭa', 'டா': 'ṭā', 'டி': 'ṭi', 'டீ': 'ṭī', 'டு': 'ṭu', 'டூ': 'ṭū', 'டெ': 'ṭe', 'டே': 'ṭē', 'டை': 'ṭai', 'டொ': 'ṭo', 'டோ': 'ṭō', 'டௌ': 'ṭau',\r\n+        'ண்': 'ṇ', 'ண': 'ṇa', 'ணா': 'ṇā', 'ணி': 'ṇi', 'ணீ': 'ṇī', 'ணு': 'ṇu', 'ணூ': 'ṇū', 'ணெ': 'ṇe', 'ணே': 'ṇē', 'ணை': 'ṇai', 'ணொ': 'ṇo', 'ணோ': 'ṇō', 'ணௌ': 'ṇau',\r\n+        'த்': 't', 'த': 'ta', 'தா': 'tā', 'தி': 'ti', 'தீ': 'tī', 'து': 'tu', 'தூ': 'tū', 'தெ': 'te', 'தே': 'tē', 'தை': 'tai', 'தொ': 'to', 'தோ': 'tō', 'தௌ': 'tau',\r\n+        'ந்': 'n', 'ந': 'na', 'நா': 'nā', 'நி': 'ni', 'நீ': 'nī', 'நு': 'nu', 'நூ': 'nū', 'நெ': 'ne', 'நே': 'nē', 'நை': 'nai', 'நொ': 'no', 'நோ': 'nō', 'நௌ': 'nau',\r\n+        'ப்': 'p', 'ப': 'pa', 'பா': 'pā', 'பி': 'pi', 'பீ': 'pī', 'பு': 'pu', 'பூ': 'pū', 'பெ': 'pe', 'பே': 'pē', 'பை': 'pai', 'பொ': 'po', 'போ': 'pō', 'பௌ': 'pau',\r\n+        'ம்': 'm', 'ம': 'ma', 'மா': 'mā', 'மி': 'mi', 'மீ': 'mī', 'மு': 'mu', 'மூ': 'mū', 'மெ': 'me', 'மே': 'mē', 'மை': 'mai', 'மொ': 'mo', 'மோ': 'mō', 'மௌ': 'mau',\r\n+        'ய்': 'y', 'ய': 'ya', 'யா': 'yā', 'யி': 'yi', 'யீ': 'yī', 'யு': 'yu', 'யூ': 'yū', 'யெ': 'ye', 'யே': 'yē', 'யை': 'yai', 'யொ': 'yo', 'யோ': 'yō', 'யௌ': 'yau',\r\n+        'ர்': 'r', 'ர': 'ra', 'ரா': 'rā', 'ரி': 'ri', 'ரீ': 'rī', 'ரு': 'ru', 'ரூ': 'rū', 'ரெ': 're', 'ரே': 'rē', 'ரை': 'rai', 'ரொ': 'ro', 'ரோ': 'rō', 'ரௌ': 'rau',\r\n+        'ல்': 'l', 'ல': 'la', 'லா': 'lā', 'லி': 'li', 'லீ': 'lī', 'லு': 'lu', 'லூ': 'lū', 'லெ': 'le', 'லே': 'lē', 'லை': 'lai', 'லொ': 'lo', 'லோ': 'lō', 'லௌ': 'lau',\r\n+        'வ்': 'v', 'வ': 'va', 'வா': 'vā', 'வி': 'vi', 'வீ': 'vī', 'வு': 'vu', 'வூ': 'vū', 'வெ': 've', 'வே': 'vē', 'வை': 'vai', 'வொ': 'vo', 'வோ': 'vō', 'வௌ': 'vau',\r\n+        'ழ்': 'ḻ', 'ழ': 'ḻa', 'ழா': 'ḻā', 'ழி': 'ḻi', 'ழீ': 'ḻī', 'ழு': 'ḻu', 'ழூ': 'ḻū', 'ழெ': 'ḻe', 'ழே': 'ḻē', 'ழை': 'ḻai', 'ழொ': 'ḻo', 'ழோ': 'ḻō', 'ழௌ': 'ḻau',\r\n+        'ள்': 'ḷ', 'ள': 'ḷa', 'ளா': 'ḷā', 'ளி': 'ḷi', 'ளீ': 'ḷī', 'ளு': 'ḷu', 'ளூ': 'ḷū', 'ளெ': 'ḷe', 'ளே': 'ḷē', 'ளை': 'ḷai', 'ளொ': 'ḷo', 'ளோ': 'ḷō', 'ளௌ': 'ḷau',\r\n+        'ற்': 'ṟ', 'ற': 'ṟa', 'றா': 'ṟā', 'றி': 'ṟi', 'றீ': 'ṟī', 'று': 'ṟu', 'றூ': 'ṟū', 'றெ': 'ṟe', 'றே': 'ṟē', 'றை': 'ṟai', 'றொ': 'ṟo', 'றோ': 'ṟō', 'றௌ': 'ṟau',\r\n+        'ன்': 'ṉ', 'ன': 'ṉa', 'னா': 'ṉā', 'னி': 'ṉi', 'னீ': 'ṉī', 'னு': 'ṉu', 'னூ': 'ṉū', 'னெ': 'ṉe', 'னே': 'ṉē', 'னை': 'ṉai', 'னொ': 'ṉo', 'னோ': 'ṉō', 'னௌ': 'ṉau',\r\n+        'அ': 'a', 'ஆ': 'ā', 'இ': 'i', 'ஈ': 'ī', 'உ': 'u', 'ஊ': 'ū', 'எ': 'e', 'ஏ': 'ē', 'ஐ': 'ai', 'ஒ': 'o', 'ஓ': 'ō', 'ஔ': 'au'\r\n+    }\r\n+};\r\n+\r\n             // Add similar enhanced mappings for other scripts\r\n         };\r\n \r\n         // DOM elements\r\n"
                }
            ],
            "date": 1758296088253,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Transliteration Tool | Bharat Script</title>\r\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/static/favicon.ico\">\r\n    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    <link href=\"https://unpkg.com/aos@2.3.1/dist/aos.css\" rel=\"stylesheet\">\r\n    <script src=\"https://unpkg.com/aos@2.3.1/dist/aos.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js\"></script>\r\n    <script src=\"https://unpkg.com/feather-icons\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/@indic-transliteration/sanscript\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/tesseract.js@4/dist/tesseract.min.js\"></script>\r\n    <style>\r\n        .gradient-text {\r\n            background: linear-gradient(90deg, #F97316, #10B981);\r\n            -webkit-background-clip: text;\r\n            background-clip: text;\r\n            color: transparent;\r\n        }\r\n\r\n        .gradient-bg {\r\n            background: linear-gradient(135deg, #F9FAFB, #E5E7EB);\r\n        }\r\n\r\n        .btn-gradient {\r\n            background: linear-gradient(90deg, #F97316, #10B981);\r\n            transition: all 0.3s ease;\r\n        }\r\n\r\n        .btn-gradient:hover {\r\n            transform: translateY(-2px);\r\n            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .file-upload {\r\n            position: relative;\r\n            overflow: hidden;\r\n            display: inline-block;\r\n        }\r\n\r\n        .file-upload-input {\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            opacity: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            cursor: pointer;\r\n        }\r\n\r\n        .loader {\r\n            border: 4px solid #f3f3f3;\r\n            border-top: 4px solid #F97316;\r\n            border-radius: 50%;\r\n            width: 30px;\r\n            height: 30px;\r\n            animation: spin 1s linear infinite;\r\n            margin: 0 auto;\r\n        }\r\n\r\n        @keyframes spin {\r\n            0% {\r\n                transform: rotate(0deg);\r\n            }\r\n\r\n            100% {\r\n                transform: rotate(360deg);\r\n            }\r\n        }\r\n\r\n        .tab-active {\r\n            border-bottom: 3px solid #F97316;\r\n            color: #F97316;\r\n            font-weight: 600;\r\n        }\r\n\r\n        .language-option {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        .language-option span {\r\n            margin-left: 8px;\r\n        }\r\n\r\n        .camera-container {\r\n            position: relative;\r\n            width: 100%;\r\n            max-width: 600px;\r\n            margin: 0 auto;\r\n        }\r\n\r\n        #camera-video {\r\n            width: 100%;\r\n            border-radius: 8px;\r\n            display: none;\r\n        }\r\n\r\n        #camera-canvas {\r\n            display: none;\r\n        }\r\n\r\n        .camera-controls {\r\n            display: flex;\r\n            justify-content: center;\r\n            gap: 10px;\r\n            margin-top: 10px;\r\n        }\r\n\r\n        .capture-area {\r\n            position: absolute;\r\n            border: 2px dashed #F97316;\r\n            background-color: rgba(249, 115, 22, 0.1);\r\n            pointer-events: none;\r\n            display: none;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body class=\"gradient-bg min-h-screen\">\r\n    <!-- Navigation -->\r\n    <nav class=\"bg-white bg-opacity-90 shadow-sm\">\r\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div class=\"flex justify-between h-16 items-center\">\r\n                <div class=\"flex items-center\">\r\n                    <div class=\"flex-shrink-0 flex items-center\">\r\n                        <i data-feather=\"globe\" class=\"h-8 w-8 text-orange-500\"></i>\r\n                        <span class=\"ml-2 text-xl font-bold text-gray-800\">BharatScript</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"hidden md:block\">\r\n                    <div class=\"ml-10 flex items-center space-x-4\">\r\n                        <a href=\"index.html\"\r\n                            class=\"px-3 py-2 rounded-md text-sm font-medium text-gray-500 hover:text-gray-900 hover:bg-gray-50\">Home</a>\r\n                        <a href=\"#\"\r\n                            class=\"px-3 py-2 rounded-md text-sm font-medium text-gray-900 bg-gray-100\">Transliterate</a>\r\n                        <a href=\"index.html#about\"\r\n                            class=\"px-3 py-2 rounded-md text-sm font-medium text-gray-500 hover:text-gray-900 hover:bg-gray-50\">About</a>\r\n                        <a href=\"contact.html\"\r\n                            class=\"px-3 py-2 rounded-md text-sm font-medium text-gray-500 hover:text-gray-900 hover:bg-gray-50\">Contact</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"-mr-2 flex md:hidden\">\r\n                    <button type=\"button\" id=\"mobile-menu-button\"\r\n                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none\">\r\n                        <i data-feather=\"menu\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n\r\n    <!-- Main Content -->\r\n    <main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div class=\"text-center mb-8\" data-aos=\"fade-up\">\r\n            <h1 class=\"text-3xl font-extrabold text-gray-900 sm:text-4xl\">\r\n                <span class=\"gradient-text\">Script Transliterator</span>\r\n            </h1>\r\n            <p class=\"mt-3 max-w-2xl mx-auto text-xl text-gray-500 sm:mt-4\">\r\n                Convert text between different Indian scripts instantly\r\n            </p>\r\n        </div>\r\n\r\n        <!-- Tabs -->\r\n        <div class=\"border-b border-gray-200 mb-8\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n            <nav class=\"-mb-px flex space-x-8\">\r\n                <a href=\"#\" id=\"text-tab\" class=\"tab-active whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\">\r\n                    Text Input\r\n                </a>\r\n                <a href=\"#\" id=\"image-tab\"\r\n                    class=\"text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\">\r\n                    Image OCR\r\n                </a>\r\n            </nav>\r\n        </div>\r\n\r\n        <!-- Transliteration Tool -->\r\n        <div id=\"text-input-section\" class=\"bg-white shadow rounded-lg overflow-hidden\" data-aos=\"fade-up\"\r\n            data-aos-delay=\"200\">\r\n            <div class=\"p-6\">\r\n                <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n                    <!-- Input Section -->\r\n                    <div>\r\n                        <div class=\"flex justify-between items-center mb-4\">\r\n                            <h3 class=\"text-lg font-medium text-gray-900\">Input</h3>\r\n                            <div class=\"flex items-center\">\r\n                                <label class=\"mr-2 text-sm font-medium text-gray-700\">Source:</label>\r\n                                <select id=\"source-script\"\r\n                                    class=\"border-gray-300 focus:border-orange-500 focus:ring-orange-500 rounded-md shadow-sm text-sm\">\r\n                                    <option value=\"devanagari\">Hindi (Devanagari)</option>\r\n                                    <option value=\"bengali\">Bengali</option>\r\n                                    <option value=\"tamil\">Tamil</option>\r\n                                    <option value=\"telugu\">Telugu</option>\r\n                                    <option value=\"kannada\">Kannada</option>\r\n                                    <option value=\"malayalam\">Malayalam</option>\r\n                                    <option value=\"gujarati\">Gujarati</option>\r\n                                    <option value=\"gurmukhi\">Punjabi (Gurmukhi)</option>\r\n                                    <option value=\"oriya\">Odia</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <textarea id=\"input-text\" rows=\"12\"\r\n                            class=\"shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border border-gray-300 rounded-md p-3\"\r\n                            placeholder=\"Type or paste your text here...\"></textarea>\r\n                        <div class=\"mt-2 flex justify-between\">\r\n                            <div class=\"flex items-center\">\r\n                                <span class=\"text-xs text-gray-500\">Characters: <span id=\"char-count\">0</span></span>\r\n                            </div>\r\n                            <button id=\"speech-input-btn\" class=\"text-sm text-orange-600 hover:text-orange-800\">\r\n                                <i data-feather=\"mic\" class=\"w-4 h-4 inline mr-1\"></i> Speech Input\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Output Section -->\r\n                    <div>\r\n                        <div class=\"flex justify-between items-center mb-4\">\r\n                            <h3 class=\"text-lg font-medium text-gray-900\">Output</h3>\r\n                            <div class=\"flex items-center\">\r\n                                <label class=\"mr-2 text-sm font-medium text-gray-700\">Target:</label>\r\n                                <select id=\"target-script\"\r\n                                    class=\"border-gray-300 focus:border-orange-500 focus:ring-orange-500 rounded-md shadow-sm text-sm\">\r\n                                    <option value=\"itrans\">English (Latin)</option>\r\n                                    <option value=\"devanagari\">Hindi (Devanagari)</option>\r\n                                    <option value=\"bengali\">Bengali</option>\r\n                                    <option value=\"tamil\">Tamil</option>\r\n                                    <option value=\"telugu\">Telugu</option>\r\n                                    <option value=\"kannada\">Kannada</option>\r\n                                    <option value=\"malayalam\">Malayalam</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"output-text\"\r\n                            class=\"shadow-sm block w-full sm:text-sm border border-gray-300 rounded-md p-3 bg-gray-50 min-h-[200px]\">\r\n                            <p class=\"text-gray-400 italic\">Transliterated text will appear here...</p>\r\n                        </div>\r\n                        <div class=\"mt-2 flex justify-end space-x-3\">\r\n                            <button id=\"copy-btn\"\r\n                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n                                <i data-feather=\"copy\" class=\"w-4 h-4 mr-1\"></i> Copy\r\n                            </button>\r\n                            <button id=\"speak-btn\"\r\n                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n                                <i data-feather=\"volume-2\" class=\"w-4 h-4 mr-1\"></i> Speak\r\n                            </button>\r\n                            <button id=\"download-btn\"\r\n                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n                                <i data-feather=\"download\" class=\"w-4 h-4 mr-1\"></i> Download\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Action Buttons -->\r\n                <div class=\"mt-6 flex justify-center\">\r\n                    <button id=\"transliterate-btn\"\r\n                        class=\"btn-gradient text-white px-8 py-3 rounded-md text-lg font-medium inline-flex items-center\">\r\n                        <i data-feather=\"repeat\" class=\"w-5 h-5 mr-2\"></i> Transliterate\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Image OCR Section (Hidden by default) -->\r\n        <div id=\"image-ocr-section\" class=\"bg-white shadow rounded-lg overflow-hidden mt-8 hidden\" data-aos=\"fade-up\">\r\n            <div class=\"p-6\">\r\n                <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Extract Text from Image</h3>\r\n                \r\n                <!-- Camera Functionality -->\r\n                <div class=\"mb-6\">\r\n                    <div class=\"camera-container\">\r\n                        <video id=\"camera-video\" autoplay playsinline></video>\r\n                        <canvas id=\"camera-canvas\"></canvas>\r\n                        <div id=\"capture-area\" class=\"capture-area\"></div>\r\n                    </div>\r\n                    <div class=\"camera-controls mt-4\">\r\n                        <button id=\"start-camera-btn\" class=\"btn-gradient text-white px-4 py-2 rounded-md text-sm\">\r\n                            <i data-feather=\"camera\" class=\"w-4 h-4 mr-1\"></i> Start Camera\r\n                        </button>\r\n                        <button id=\"capture-btn\" class=\"btn-gradient text-white px-4 py-2 rounded-md text-sm hidden\">\r\n                            <i data-feather=\"aperture\" class=\"w-4 h-4 mr-1\"></i> Capture\r\n                        </button>\r\n                        <button id=\"stop-camera-btn\" class=\"px-4 py-2 border border-gray-300 rounded-md text-sm text-gray-700 bg-white hover:bg-gray-50 hidden\">\r\n                            <i data-feather=\"x\" class=\"w-4 h-4 mr-1\"></i> Stop Camera\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center mb-6\">\r\n                    <div class=\"flex justify-center\">\r\n                        <i data-feather=\"image\" class=\"w-12 w-12 text-gray-400\"></i>\r\n                    </div>\r\n                    <div class=\"mt-4 flex text-sm text-gray-600 justify-center\">\r\n                        <label\r\n                            class=\"file-upload relative cursor-pointer bg-white rounded-md font-medium text-orange-600 hover:text-orange-500 focus-within:outline-none\">\r\n                            <span>Upload an image file</span>\r\n                            <input type=\"file\" id=\"ocr-image-upload\" class=\"file-upload-input\" accept=\"image/*\">\r\n                        </label>\r\n                        <p class=\"pl-1\">or drag and drop</p>\r\n                    </div>\r\n                    <p class=\"text-xs text-gray-500 mt-2\">\r\n                        PNG, JPG, GIF up to 10MB\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"mt-6 grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n                    <!-- Original Image Preview -->\r\n                    <div>\r\n                        <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Original Image</h4>\r\n                        <div id=\"image-preview\"\r\n                            class=\"border border-gray-200 rounded-md p-4 flex items-center justify-center bg-gray-50 min-h-[200px]\">\r\n                            <p class=\"text-gray-400 italic\">Image preview will appear here...</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Extracted Text -->\r\n                    <div>\r\n                        <div class=\"flex justify-between items-center mb-2\">\r\n                            <h4 class=\"text-sm font-medium text-gray-700\">Extracted Text</h4>\r\n                            <div class=\"flex items-center\">\r\n                                <label class=\"mr-2 text-xs font-medium text-gray-700\">Detected Language:</label>\r\n                                <span id=\"detected-language\" class=\"text-xs bg-orange-100 text-orange-800 px-2 py-1 rounded-full\">Auto-detecting...</span>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"ocr-extracted-text\"\r\n                            class=\"border border-gray-200 rounded-md p-3 bg-gray-50 min-h-[200px]\">\r\n                            <p class=\"text-gray-400 italic\">Extracted text will appear here...</p>\r\n                        </div>\r\n                        <div class=\"mt-2 flex justify-end\">\r\n                            <button id=\"ocr-copy-btn\" class=\"text-xs text-orange-600 hover:text-orange-800 mr-3\">\r\n                                <i data-feather=\"copy\" class=\"w-3 h-3 inline mr-1\"></i> Copy Text\r\n                            </button>\r\n                            <button id=\"ocr-use-btn\" class=\"text-xs text-orange-600 hover:text-orange-800\">\r\n                                <i data-feather=\"arrow-right\" class=\"w-3 h-3 inline mr-1\"></i> Use for Transliteration\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- OCR Processing Controls -->\r\n                <div class=\"mt-6 flex justify-center space-x-4\">\r\n                    <button id=\"ocr-cancel-btn\"\r\n                        class=\"px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\r\n                        Clear\r\n                    </button>\r\n                    <button id=\"ocr-process-btn\"\r\n                        class=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-orange-600 hover:bg-orange-700 focus:outline-none\">\r\n                        <div class=\"flex items-center\">\r\n                            <span id=\"ocr-btn-text\">Extract Text</span>\r\n                            <div id=\"ocr-loader\" class=\"loader hidden ml-2\"></div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n\r\n                <!-- OCR Progress -->\r\n                <div id=\"ocr-progress\" class=\"mt-4 hidden\">\r\n                    <div class=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                        <div id=\"ocr-progress-bar\" class=\"bg-orange-600 h-2.5 rounded-full\" style=\"width: 0%\"></div>\r\n                    </div>\r\n                    <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                        <span id=\"ocr-progress-status\">Initializing...</span>\r\n                        <span id=\"ocr-progress-percentage\">0%</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Script Information -->\r\n        <div class=\"mt-8 bg-white shadow rounded-lg overflow-hidden\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n            <div class=\"p-6\">\r\n                <h3 class=\"text-lg font-medium text-gray-900 mb-4\">About Indian Scripts</h3>\r\n                <div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\r\n                    <div>\r\n                        <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Source Script: <span\r\n                                id=\"source-script-name\">Devanagari</span></h4>\r\n                        <p class=\"text-sm text-gray-500\">\r\n                            Devanagari is an abugida alphabet of India and Nepal. It is written from left to right, has\r\n                            a strong preference for symmetrical rounded shapes within squared outlines, and is\r\n                            recognizable by a horizontal line that runs along the top of full letters.\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Target Script: <span\r\n                                id=\"target-script-name\">Latin (English)</span></h4>\r\n                        <p class=\"text-sm text-gray-500\">\r\n                            The Latin script is the basis of the international phonetic alphabet. Our transliteration\r\n                            follows standard academic conventions for representing Indian scripts in Latin characters,\r\n                            preserving pronunciation as closely as possible.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n\r\n    <!-- Footer -->\r\n    <footer class=\"bg-gray-800 mt-12\">\r\n        <div class=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\r\n            <div class=\"xl:grid xl:grid-cols-3 xl:gap-8\">\r\n                <div class=\"space-y-8 xl:col-span-1\">\r\n                    <div class=\"flex items-center\">\r\n                        <i data-feather=\"globe\" class=\"h-8 w-8 text-orange-500\"></i>\r\n                        <span class=\"ml-2 text-xl font-bold text-white\">BharatScript</span>\r\n                    </div>\r\n                    <p class=\"text-gray-300 text-base\">\r\n                        Making Indian scripts accessible to everyone through technology.\r\n                    </p>\r\n                </div>\r\n                <div class=\"mt-12 grid grid-cols-2 gap-8 xl:mt-0 xl:col-span-2\">\r\n                    <div class=\"md:grid md:grid-cols-2 md:gap-8\">\r\n                        <div>\r\n                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n                                Navigation\r\n                            </h3>\r\n                            <ul class=\"mt-4 space-y-4\">\r\n                                <li>\r\n                                    <a href=\"index.html\" class=\"text-base text-gray-400 hover:text-white\">\r\n                                        Home\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n                                        Transliteration Tool\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"index.html#about\" class=\"text-base text-gray-400 hover:text-white\">\r\n                                        About\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"mt-12 md:mt-0\">\r\n                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n                                Support\r\n                            </h3>\r\n                            <ul class=\"mt-4 space-y-4\">\r\n                                <li>\r\n                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n                                        Documentation\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"contact.html\" class=\"text-base text-gray-400 hover:text-white\">\r\n                                        Contact\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"md:grid md:grid-cols-2 md:gap-8\">\r\n                        <div>\r\n                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n                                Acknowledgments\r\n                            </h3>\r\n                            <ul class=\"mt-4 space-y-4\">\r\n                                <li>\r\n                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n                                        AICTE\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\" class=\"text-base text-gray-400 hover:text-white\">\r\n                                        IKS\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"md:grid md:grid-cols-2 md:gap-8\">\r\n                        <div>\r\n                            <h3 class=\"text-sm font-semibold text-gray-300 tracking-wider uppercase\">\r\n                                Technology\r\n                            </h3>\r\n                            <ul class=\"mt-4 space-y-4\">\r\n                                <li>\r\n                                    <span class=\"text-base text-gray-400\">Sanscript.js</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span class=\"text-base text-gray-400\">Tesseract.js</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"mt-12 border-t border-gray-700 pt-8\">\r\n                <p class=\"text-base text-gray-400 text-center\">\r\n                    &copy; 2023 Bharat Script Transliterator. All rights reserved.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n\r\n    <script>\r\n        feather.replace();\r\n        AOS.init({\r\n            duration: 800,\r\n            easing: 'ease-in-out',\r\n            once: true\r\n        });\r\n\r\n        // Character count for input text\r\n        document.getElementById('input-text').addEventListener('input', function () {\r\n            document.getElementById('char-count').textContent = this.value.length;\r\n        });\r\n\r\n        // Function to capitalize English sentences properly\r\n        function capitalizeEnglishSentence(text) {\r\n            if (!text) return text;\r\n\r\n            // Split into sentences\r\n            const sentences = text.split(/([.!?]+)/);\r\n            let result = '';\r\n\r\n            for (let i = 0; i < sentences.length; i++) {\r\n                if (i % 2 === 0) {\r\n                    // This is a sentence (not punctuation)\r\n                    let sentence = sentences[i].trim();\r\n                    if (sentence.length > 0) {\r\n                        // Capitalize first letter, lowercase the rest\r\n                        sentence = sentence.charAt(0).toUpperCase() +\r\n                            sentence.slice(1).toLowerCase();\r\n                    }\r\n                    result += sentence;\r\n                } else {\r\n                    // This is punctuation\r\n                    result += sentences[i];\r\n                }\r\n\r\n                // Add space after punctuation if not the last element\r\n                if (i < sentences.length - 1 && sentences[i].length > 0) {\r\n                    result += ' ';\r\n                }\r\n            }\r\n\r\n            return result.trim();\r\n        }\r\n\r\n        // Copy button functionality\r\n        document.getElementById('copy-btn').addEventListener('click', function () {\r\n            const outputText = document.getElementById('output-text').textContent;\r\n            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n                alert('No text to copy. Please transliterate some text first.');\r\n                return;\r\n            }\r\n\r\n            navigator.clipboard.writeText(outputText).then(() => {\r\n                const originalText = this.innerHTML;\r\n                this.innerHTML = '<i data-feather=\"check\" class=\"w-4 h-4 mr-1\"></i> Copied!';\r\n                feather.replace();\r\n                setTimeout(() => {\r\n                    this.innerHTML = originalText;\r\n                    feather.replace();\r\n                }, 2000);\r\n            }).catch(err => {\r\n                console.error('Failed to copy text: ', err);\r\n                alert('Failed to copy text. Please try again.');\r\n            });\r\n        });\r\n\r\n        // Speak button functionality with improved pronunciation\r\n        document.getElementById('speak-btn').addEventListener('click', function () {\r\n            const outputText = document.getElementById('output-text').textContent;\r\n            const targetScript = document.getElementById('target-script').value;\r\n\r\n            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n                alert('No text to speak. Please transliterate some text first.');\r\n                return;\r\n            }\r\n\r\n            if ('speechSynthesis' in window) {\r\n                // Cancel any ongoing speech\r\n                window.speechSynthesis.cancel();\r\n\r\n                const utterance = new SpeechSynthesisUtterance(outputText);\r\n\r\n                // Set language based on target script for better pronunciation\r\n                const langMap = {\r\n                    'itrans': 'en-US', // English\r\n                    'devanagari': 'hi-IN', // Hindi\r\n                    'bengali': 'bn-IN', // Bengali\r\n                    'tamil': 'ta-IN', // Tamil\r\n                    'telugu': 'te-IN', // Telugu\r\n                    'kannada': 'kn-IN', // Kannada\r\n                    'malayalam': 'ml-IN', // Malayalam\r\n                    'gujarati': 'gu-IN', // Gujarati\r\n                    'gurmukhi': 'pa-IN', // Punjabi\r\n                    'oriya': 'or-IN' // Odia\r\n                };\r\n\r\n                utterance.lang = langMap[targetScript] || 'en-US';\r\n                utterance.rate = 0.8; // Slightly slower for better clarity\r\n                utterance.pitch = 1.0;\r\n\r\n                // Try to find a voice that matches the language\r\n                const voices = speechSynthesis.getVoices();\r\n                const preferredVoice = voices.find(voice =>\r\n                    voice.lang === utterance.lang && voice.localService === true\r\n                );\r\n\r\n                if (preferredVoice) {\r\n                    utterance.voice = preferredVoice;\r\n                }\r\n\r\n                speechSynthesis.speak(utterance);\r\n            } else {\r\n                alert('Text-to-speech is not supported in your browser');\r\n            }\r\n        });\r\n\r\n        // Load voices when they become available\r\n        if ('speechSynthesis' in window) {\r\n            speechSynthesis.onvoiceschanged = function() {\r\n                // Voices are loaded, we can now use them\r\n            };\r\n        }\r\n\r\n        // Download button functionality\r\n        document.getElementById('download-btn').addEventListener('click', function () {\r\n            const outputText = document.getElementById('output-text').textContent;\r\n\r\n            if (!outputText || outputText.includes('Transliterated text will appear here')) {\r\n                alert('No text to download. Please transliterate some text first.');\r\n                return;\r\n            }\r\n\r\n            const blob = new Blob([outputText], { type: 'text/plain' });\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            // Create filename based on scripts used\r\n            const sourceScript = document.getElementById('source-script').value;\r\n            const targetScript = document.getElementById('target-script').value;\r\n            a.download = `transliteration-${sourceScript}-to-${targetScript}.txt`;\r\n\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        });\r\n\r\n        // Speech input functionality with language support\r\n        document.getElementById('speech-input-btn').addEventListener('click', function () {\r\n            if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n                const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n\r\n                // Set language based on source script\r\n                const sourceScript = document.getElementById('source-script').value;\r\n                const langMap = {\r\n                    'devanagari': 'hi-IN',\r\n                    'bengali': 'bn-IN',\r\n                    'tamil': 'ta-IN',\r\n                    'telugu': 'te-IN',\r\n                    'kannada': 'kn-IN',\r\n                    'malayalam': 'ml-IN',\r\n                    'gujarati': 'gu-IN',\r\n                    'gurmukhi': 'pa-IN',\r\n                    'itrans': 'en-US'\r\n                };\r\n\r\n                recognition.lang = langMap[sourceScript] || 'en-US';\r\n                recognition.continuous = false;\r\n                recognition.interimResults = false;\r\n\r\n                recognition.onresult = function (event) {\r\n                    const transcript = event.results[0][0].transcript;\r\n                    document.getElementById('input-text').value = transcript;\r\n                    document.getElementById('char-count').textContent = transcript.length;\r\n                };\r\n\r\n                recognition.onerror = function (event) {\r\n                    console.error('Speech recognition error', event.error);\r\n                    if (event.error === 'not-allowed') {\r\n                        alert('Microphone access is not allowed. Please enable microphone permissions in your browser settings.');\r\n                    } else {\r\n                        alert('Error with speech recognition: ' + event.error);\r\n                    }\r\n                };\r\n\r\n                recognition.start();\r\n            } else {\r\n                alert('Speech recognition is not supported in your browser');\r\n            }\r\n        });\r\n\r\n        // Transliterate button functionality with improved accuracy\r\n        document.getElementById('transliterate-btn').addEventListener('click', function () {\r\n            const inputText = document.getElementById('input-text').value.trim();\r\n            const sourceScript = document.getElementById('source-script').value;\r\n            const targetScript = document.getElementById('target-script').value;\r\n\r\n            if (!inputText) {\r\n                alert('Please enter some text to transliterate');\r\n                return;\r\n            }\r\n\r\n            // Update script names in info section\r\n            document.getElementById('source-script-name').textContent = getScriptName(sourceScript);\r\n            document.getElementById('target-script-name').textContent = getScriptName(targetScript);\r\n\r\n            // Show loading state\r\n            const originalButtonText = this.innerHTML;\r\n            this.innerHTML = '<i data-feather=\"loader\" class=\"w-5 h-5 mr-2 animate-spin\"></i> Processing...';\r\n            this.disabled = true;\r\n            feather.replace();\r\n\r\n            // Use setTimeout to allow UI to update before processing\r\n            setTimeout(() => {\r\n                try {\r\n                    let result = Sanscript.t(inputText, sourceScript, targetScript);\r\n\r\n                    // If target is English (itrans), apply capitalization rules\r\n                    if (targetScript === 'itrans') {\r\n                        result = capitalizeEnglishSentence(result);\r\n                    }\r\n\r\n                    document.getElementById('output-text').innerHTML =\r\n                        `<p class=\"text-gray-800\">${result}</p>`;\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                    document.getElementById('output-text').innerHTML =\r\n                        `<p class=\"text-red-600\">Error: ${error.message}</p>`;\r\n                } finally {\r\n                    this.innerHTML = originalButtonText;\r\n                    this.disabled = false;\r\n                    feather.replace();\r\n                }\r\n            }, 100);\r\n        });\r\n\r\n        // Tab switching\r\n        document.getElementById('text-tab').addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            document.getElementById('text-tab').classList.add('tab-active');\r\n            document.getElementById('image-tab').classList.remove('tab-active');\r\n            document.getElementById('text-input-section').classList.remove('hidden');\r\n            document.getElementById('image-ocr-section').classList.add('hidden');\r\n        });\r\n\r\n        document.getElementById('image-tab').addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            document.getElementById('image-tab').classList.add('tab-active');\r\n            document.getElementById('text-tab').classList.remove('tab-active');\r\n            document.getElementById('image-ocr-section').classList.remove('hidden');\r\n            document.getElementById('text-input-section').classList.add('hidden');\r\n        });\r\n\r\n        // Image upload preview\r\n        document.getElementById('ocr-image-upload').addEventListener('change', function (e) {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n                // Check file size (max 10MB)\r\n                if (file.size > 10 * 1024 * 1024) {\r\n                    alert('File size exceeds 10MB limit. Please choose a smaller file.');\r\n                    this.value = '';\r\n                    return;\r\n                }\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = function (event) {\r\n                    const preview = document.getElementById('image-preview');\r\n                    preview.innerHTML = `<img src=\"${event.target.result}\" alt=\"Preview\" class=\"max-h-48 mx-auto rounded\">`;\r\n                }\r\n                reader.readAsDataURL(file);\r\n            }\r\n        });\r\n\r\n        // Camera functionality\r\n        const video = document.getElementById('camera-video');\r\n        const canvas = document.getElementById('camera-canvas');\r\n        const captureArea = document.getElementById('capture-area');\r\n        const startCameraBtn = document.getElementById('start-camera-btn');\r\n        const captureBtn = document.getElementById('capture-btn');\r\n        const stopCameraBtn = document.getElementById('stop-camera-btn');\r\n        let stream = null;\r\n\r\n        startCameraBtn.addEventListener('click', async function() {\r\n            try {\r\n                stream = await navigator.mediaDevices.getUserMedia({ \r\n                    video: { facingMode: 'environment' } \r\n                });\r\n                video.srcObject = stream;\r\n                video.style.display = 'block';\r\n                captureArea.style.display = 'block';\r\n                startCameraBtn.classList.add('hidden');\r\n                captureBtn.classList.remove('hidden');\r\n                stopCameraBtn.classList.remove('hidden');\r\n                \r\n                // Set capture area position and size\r\n                setTimeout(() => {\r\n                    const videoWidth = video.videoWidth;\r\n                    const videoHeight = video.videoHeight;\r\n                    const aspectRatio = videoWidth / videoHeight;\r\n                    \r\n                    // Calculate capture area (center 70% of video)\r\n                    const captureWidth = videoWidth * 0.7;\r\n                    const captureHeight = captureWidth / aspectRatio;\r\n                    const captureX = (videoWidth - captureWidth) / 2;\r\n                    const captureY = (videoHeight - captureHeight) / 2;\r\n                    \r\n                    // Scale to video element size\r\n                    const videoElementWidth = video.offsetWidth;\r\n                    const scale = videoElementWidth / videoWidth;\r\n                    \r\n                    captureArea.style.width = `${captureWidth * scale}px`;\r\n                    captureArea.style.height = `${captureHeight * scale}px`;\r\n                    captureArea.style.left = `${captureX * scale}px`;\r\n                    captureArea.style.top = `${captureY * scale}px`;\r\n                }, 500);\r\n            } catch (err) {\r\n                console.error('Error accessing camera:', err);\r\n                alert('Unable to access camera. Please check permissions and try again.');\r\n            }\r\n        });\r\n\r\n        stopCameraBtn.addEventListener('click', function() {\r\n            if (stream) {\r\n                stream.getTracks().forEach(track => track.stop());\r\n                video.srcObject = null;\r\n                video.style.display = 'none';\r\n                captureArea.style.display = 'none';\r\n                startCameraBtn.classList.remove('hidden');\r\n                captureBtn.classList.add('hidden');\r\n                stopCameraBtn.classList.add('hidden');\r\n            }\r\n        });\r\n\r\n        captureBtn.addEventListener('click', function() {\r\n            const context = canvas.getContext('2d');\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            \r\n            // Draw the current video frame to canvas\r\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            \r\n                        // Convert canvas to image and display in preview\r\n            const imageDataURL = canvas.toDataURL('image/png');\r\n            const preview = document.getElementById('image-preview');\r\n            preview.innerHTML = `<img src=\"${imageDataURL}\" alt=\"Captured Image\" class=\"max-h-48 mx-auto rounded\">`;\r\n            \r\n            // Stop camera after capture\r\n            if (stream) {\r\n                stream.getTracks().forEach(track => track.stop());\r\n                video.srcObject = null;\r\n                video.style.display = 'none';\r\n                captureArea.style.display = 'none';\r\n                startCameraBtn.classList.remove('hidden');\r\n                captureBtn.classList.add('hidden');\r\n                stopCameraBtn.classList.add('hidden');\r\n            }\r\n            \r\n            // Process the captured image\r\n            processImageForOCR(imageDataURL);\r\n        });\r\n\r\n        // OCR processing functionality\r\n        document.getElementById('ocr-process-btn').addEventListener('click', function() {\r\n            const fileInput = document.getElementById('ocr-image-upload');\r\n            const preview = document.getElementById('image-preview');\r\n            \r\n            if (preview.querySelector('img')) {\r\n                const imgSrc = preview.querySelector('img').src;\r\n                processImageForOCR(imgSrc);\r\n            } else if (fileInput.files.length > 0) {\r\n                const file = fileInput.files[0];\r\n                const reader = new FileReader();\r\n                reader.onload = function(event) {\r\n                    processImageForOCR(event.target.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            } else {\r\n                alert('Please upload an image or capture from camera first.');\r\n            }\r\n        });\r\n\r\n        // Function to process image for OCR\r\n        function processImageForOCR(imageData) {\r\n            // Show progress UI\r\n            document.getElementById('ocr-progress').classList.remove('hidden');\r\n            document.getElementById('ocr-btn-text').classList.add('hidden');\r\n            document.getElementById('ocr-loader').classList.remove('hidden');\r\n            document.getElementById('ocr-process-btn').disabled = true;\r\n            \r\n            // Reset progress\r\n            updateOCRProgress(0, 'Initializing Tesseract...');\r\n            \r\n            // Create worker for OCR\r\n            const worker = Tesseract.createWorker();\r\n            \r\n            (async () => {\r\n                try {\r\n                    await worker.load();\r\n                    updateOCRProgress(10, 'Loading language data...');\r\n                    \r\n                    await worker.loadLanguage('eng+hin+tam+tel+kan+mal+ben+guj+pan+urd');\r\n                    updateOCRProgress(30, 'Initializing OCR engine...');\r\n                    \r\n                    await worker.initialize('eng+hin+tam+tel+kan+mal+ben+guj+pan+urd');\r\n                    updateOCRProgress(50, 'Processing image...');\r\n                    \r\n                    const { data } = await worker.recognize(imageData);\r\n                    updateOCRProgress(90, 'Finalizing text extraction...');\r\n                    \r\n                    // Display extracted text\r\n                    const extractedText = data.text.trim();\r\n                    document.getElementById('ocr-extracted-text').innerHTML = \r\n                        `<p class=\"text-gray-800 whitespace-pre-wrap\">${extractedText}</p>`;\r\n                    \r\n                    // Try to detect language\r\n                    detectLanguage(extractedText);\r\n                    \r\n                    updateOCRProgress(100, 'Text extraction complete!');\r\n                    \r\n                    // Re-enable button after a short delay\r\n                    setTimeout(() => {\r\n                        document.getElementById('ocr-btn-text').classList.remove('hidden');\r\n                        document.getElementById('ocr-loader').classList.add('hidden');\r\n                        document.getElementById('ocr-process-btn').disabled = false;\r\n                    }, 1000);\r\n                    \r\n                } catch (error) {\r\n                    console.error('OCR Error:', error);\r\n                    document.getElementById('ocr-extracted-text').innerHTML = \r\n                        `<p class=\"text-red-600\">Error: ${error.message}</p>`;\r\n                    \r\n                    document.getElementById('ocr-btn-text').classList.remove('hidden');\r\n                    document.getElementById('ocr-loader').classList.add('hidden');\r\n                    document.getElementById('ocr-process-btn').disabled = false;\r\n                } finally {\r\n                    await worker.terminate();\r\n                }\r\n            })();\r\n        }\r\n\r\n        // Function to update OCR progress\r\n        function updateOCRProgress(percent, status) {\r\n            document.getElementById('ocr-progress-bar').style.width = `${percent}%`;\r\n            document.getElementById('ocr-progress-percentage').textContent = `${percent}%`;\r\n            document.getElementById('ocr-progress-status').textContent = status;\r\n        }\r\n\r\n        // Function to detect language from text\r\n        function detectLanguage(text) {\r\n            if (!text || text.length < 10) {\r\n                document.getElementById('detected-language').textContent = 'Insufficient text';\r\n                return;\r\n            }\r\n            \r\n            // Simple character-based language detection for Indian scripts\r\n            const scriptPatterns = {\r\n                'devanagari': /[\\u0900-\\u097F]/g, // Hindi, Marathi, Sanskrit, etc.\r\n                'bengali': /[\\u0980-\\u09FF]/g,    // Bengali, Assamese\r\n                'tamil': /[\\u0B80-\\u0BFF]/g,      // Tamil\r\n                'telugu': /[\\u0C00-\\u0C7F]/g,     // Telugu\r\n                'kannada': /[\\u0C80-\\u0CFF]/g,    // Kannada\r\n                'malayalam': /[\\u0D00-\\u0D7F]/g,  // Malayalam\r\n                'gujarati': /[\\u0A80-\\u0AFF]/g,   // Gujarati\r\n                'gurmukhi': /[\\u0A00-\\u0A7F]/g,   // Punjabi\r\n                'oriya': /[\\u0B00-\\u0B7F]/g       // Odia\r\n            };\r\n            \r\n            let detectedScript = 'Unknown';\r\n            let maxCount = 0;\r\n            \r\n            for (const [script, pattern] of Object.entries(scriptPatterns)) {\r\n                const matches = text.match(pattern);\r\n                const count = matches ? matches.length : 0;\r\n                \r\n                if (count > maxCount) {\r\n                    maxCount = count;\r\n                    detectedScript = script;\r\n                }\r\n            }\r\n            \r\n            // If no Indian script detected, check if it's English\r\n            if (maxCount === 0 && text.match(/[a-zA-Z]/g)) {\r\n                detectedScript = 'English';\r\n            }\r\n            \r\n            document.getElementById('detected-language').textContent = getScriptName(detectedScript);\r\n        }\r\n\r\n        // OCR Copy button\r\n        document.getElementById('ocr-copy-btn').addEventListener('click', function() {\r\n            const extractedText = document.getElementById('ocr-extracted-text').textContent;\r\n            \r\n            if (!extractedText || extractedText.includes('Extracted text will appear here')) {\r\n                alert('No text to copy. Please extract text from an image first.');\r\n                return;\r\n            }\r\n            \r\n            navigator.clipboard.writeText(extractedText).then(() => {\r\n                const originalText = this.innerHTML;\r\n                this.innerHTML = '<i data-feather=\"check\" class=\"w-3 h-3 inline mr-1\"></i> Copied!';\r\n                feather.replace();\r\n                setTimeout(() => {\r\n                    this.innerHTML = originalText;\r\n                    feather.replace();\r\n                }, 2000);\r\n            });\r\n        });\r\n\r\n        // OCR Use for Transliteration button\r\n        document.getElementById('ocr-use-btn').addEventListener('click', function() {\r\n            const extractedText = document.getElementById('ocr-extracted-text').textContent;\r\n            \r\n            if (!extractedText || extractedText.includes('Extracted text will appear here')) {\r\n                alert('No text to use. Please extract text from an image first.');\r\n                return;\r\n            }\r\n            \r\n            // Switch to text input tab\r\n            document.getElementById('text-tab').classList.add('tab-active');\r\n            document.getElementById('image-tab').classList.remove('tab-active');\r\n            document.getElementById('text-input-section').classList.remove('hidden');\r\n            document.getElementById('image-ocr-section').classList.add('hidden');\r\n            \r\n            // Set the extracted text as input\r\n            document.getElementById('input-text').value = extractedText;\r\n            document.getElementById('char-count').textContent = extractedText.length;\r\n            \r\n            // Auto-detect source script based on extracted text\r\n            const detectedLanguage = document.getElementById('detected-language').textContent.toLowerCase();\r\n            const scriptMap = {\r\n                'hindi': 'devanagari',\r\n                'bengali': 'bengali',\r\n                'tamil': 'tamil',\r\n                'telugu': 'telugu',\r\n                'kannada': 'kannada',\r\n                'malayalam': 'malayalam',\r\n                'gujarati': 'gujarati',\r\n                'punjabi': 'gurmukhi',\r\n                'odia': 'oriya',\r\n                'english': 'itrans'\r\n            };\r\n            \r\n            for (const [lang, script] of Object.entries(scriptMap)) {\r\n                if (detectedLanguage.includes(lang)) {\r\n                    document.getElementById('source-script').value = script;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        // OCR Cancel/Clear button\r\n        document.getElementById('ocr-cancel-btn').addEventListener('click', function() {\r\n            // Clear file input\r\n            document.getElementById('ocr-image-upload').value = '';\r\n            \r\n            // Reset preview and extracted text\r\n            document.getElementById('image-preview').innerHTML = \r\n                '<p class=\"text-gray-400 italic\">Image preview will appear here...</p>';\r\n            document.getElementById('ocr-extracted-text').innerHTML = \r\n                '<p class=\"text-gray-400 italic\">Extracted text will appear here...</p>';\r\n            \r\n            // Reset detected language\r\n            document.getElementById('detected-language').textContent = 'Auto-detecting...';\r\n            \r\n            // Hide progress bar\r\n            document.getElementById('ocr-progress').classList.add('hidden');\r\n        });\r\n\r\n        // Helper function to get script display name\r\n        function getScriptName(scriptCode) {\r\n            const scriptNames = {\r\n                'itrans': 'English (Latin)',\r\n                'devanagari': 'Hindi (Devanagari)',\r\n                'bengali': 'Bengali',\r\n                'tamil': 'Tamil',\r\n                'telugu': 'Telugu',\r\n                'kannada': 'Kannada',\r\n                'malayalam': 'Malayalam',\r\n                'gujarati': 'Gujarati',\r\n                'gurmukhi': 'Punjabi (Gurmukhi)',\r\n                'oriya': 'Odia'\r\n            };\r\n            \r\n            return scriptNames[scriptCode] || scriptCode;\r\n        }\r\n\r\n        // Initialize tooltips and other UI enhancements\r\n        function initTooltips() {\r\n            // Add tooltips to buttons\r\n            const buttonsWithTooltips = [\r\n                { id: 'copy-btn', text: 'Copy to clipboard' },\r\n                { id: 'speak-btn', text: 'Listen to pronunciation' },\r\n                { id: 'download-btn', text: 'Download as text file' },\r\n                { id: 'speech-input-btn', text: 'Use voice input' },\r\n                { id: 'ocr-copy-btn', text: 'Copy extracted text' },\r\n                { id: 'ocr-use-btn', text: 'Use this text for transliteration' }\r\n            ];\r\n            \r\n            buttonsWithTooltips.forEach(button => {\r\n                const element = document.getElementById(button.id);\r\n                if (element) {\r\n                    element.setAttribute('title', button.text);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Initialize when page loads\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            initTooltips();\r\n            \r\n            // Add real-time transliteration as user types\r\n            const inputText = document.getElementById('input-text');\r\n            let transliterationTimeout;\r\n            \r\n            inputText.addEventListener('input', function() {\r\n                clearTimeout(transliterationTimeout);\r\n                \r\n                // Only auto-transliterate if text is not empty\r\n                if (this.value.trim()) {\r\n                    transliterationTimeout = setTimeout(() => {\r\n                        document.getElementById('transliterate-btn').click();\r\n                    }, 1000); // Wait 1 second after typing stops\r\n                }\r\n            });\r\n            \r\n            // Update script info when scripts change\r\n            document.getElementById('source-script').addEventListener('change', updateScriptInfo);\r\n            document.getElementById('target-script').addEventListener('change', updateScriptInfo);\r\n            \r\n            function updateScriptInfo() {\r\n                const sourceScript = document.getElementById('source-script').value;\r\n                const targetScript = document.getElementById('target-script').value;\r\n                \r\n                document.getElementById('source-script-name').textContent = getScriptName(sourceScript);\r\n                document.getElementById('target-script-name').textContent = getScriptName(targetScript);\r\n            }\r\n            \r\n            // Initialize script info\r\n            updateScriptInfo();\r\n        });\r\n\r\n        // Handle drag and drop for image upload\r\n        const dropArea = document.querySelector('.border-dashed');\r\n        \r\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\r\n            dropArea.addEventListener(eventName, preventDefaults, false);\r\n        });\r\n        \r\n        function preventDefaults(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        \r\n        ['dragenter', 'dragover'].forEach(eventName => {\r\n            dropArea.addEventListener(eventName, highlight, false);\r\n        });\r\n        \r\n        ['dragleave', 'drop'].forEach(eventName => {\r\n            dropArea.addEventListener(eventName, unhighlight, false);\r\n        });\r\n        \r\n        function highlight() {\r\n            dropArea.classList.add('border-orange-500', 'bg-orange-50');\r\n        }\r\n        \r\n        function unhighlight() {\r\n            dropArea.classList.remove('border-orange-500', 'bg-orange-50');\r\n        }\r\n        \r\n        dropArea.addEventListener('drop', handleDrop, false);\r\n        \r\n        function handleDrop(e) {\r\n            const dt = e.dataTransfer;\r\n            const files = dt.files;\r\n            \r\n            if (files.length) {\r\n                const file = files[0];\r\n                \r\n                // Check if it's an image file\r\n                if (!file.type.match('image.*')) {\r\n                    alert('Please drop an image file only.');\r\n                    return;\r\n                }\r\n                \r\n                // Check file size\r\n                if (file.size > 10 * 1024 * 1024) {\r\n                    alert('File size exceeds 10MB limit. Please choose a smaller file.');\r\n                    return;\r\n                }\r\n                \r\n                // Set the file to the input\r\n                const fileInput = document.getElementById('ocr-image-upload');\r\n                fileInput.files = files;\r\n                \r\n                // Trigger change event\r\n                const event = new Event('change');\r\n                fileInput.dispatchEvent(event);\r\n            }\r\n        }\r\n    </script>\r\n</body>\r\n</html>"
        }
    ]
}